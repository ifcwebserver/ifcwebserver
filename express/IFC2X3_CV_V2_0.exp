(*
Copyright by: buildingSMART International, 1996-2011
All rights reserved. No part of this documentation may be
reproduced, stored in a retrieval system, or transmitted
in any form or by any means, without the prior written
permission of the owner.
Contents:
full IFC sub schema EXPRESS definitions for the IFC2X3 Coordination View Version 2.0
- ONLY released for reference and validation purposes
- SHALL NOT be used to compile and implement this sub schema
- IFC exchange files with FILE_SCHEMA(('IFC2X3_CV_V2_0')); are not valid
express longform distribution
- compiled for EXPRESS version 1 technical corrigendum 2
Issue date:
June 12, 2011
Development Team:
- Modeling Support Group of buildingSMART International
- Implementation Support Group of buildingSMART International
compiled by Thomas Liebich tl@aec3.com
- based on entity list of Coordination View Version 2.0 (v1.3.1 of June 12, 2011)
compiled by Karl-Heinz Haefele karl-heinz.haefele@kit.edu
Entities, not allowed to be instantiated are declared ABSTRACT:
- IfcTypeObject as Supertype of IfcTypeProduct
- IfcTypeProduct as Supertype of IfcElementType
- IfcProductRepresentation as Supertype of IfcProductDefinitionShape and IfcMaterialDefinitionRepresentation
- IfcRepresentation as Supertype of IfcStyleModel and IfcShapeModel
- IfcRepresentationContext as Supertype of IfcGeometricRepresentationContext
- IfcRelAssociates as supertype of IfcRelAssociatesClassification and IfcRelAssociatesMaterial
Changes in version 1.1 (compared to version 1.0):
- IfcBooleanResult is no longer abstract
- IfcVirationIsolatorType removed
*)

SCHEMA IFC2X3_CV_V2_0;

TYPE IfcAbsorbedDoseMeasure = REAL;
END_TYPE;

TYPE IfcAccelerationMeasure = REAL;
END_TYPE;


TYPE IfcAmountOfSubstanceMeasure = REAL;
END_TYPE;


TYPE IfcAngularVelocityMeasure = REAL;
END_TYPE;


TYPE IfcAreaMeasure = REAL;
END_TYPE;


TYPE IfcBoolean = BOOLEAN;
END_TYPE;


TYPE IfcComplexNumber = ARRAY [1:2] OF REAL;
END_TYPE;


TYPE IfcCompoundPlaneAngleMeasure = LIST [3:4] OF INTEGER;
WHERE
WR1 : { -360 <= SELF[1] < 360 };
WR2 : { -60 <= SELF[2] < 60 };
WR3 : { -60 <= SELF[3] < 60 };
WR4 : ((SELF[1] >= 0) AND (SELF[2] >= 0) AND (SELF[3] >= 0)) OR ((SELF[1] <= 0) AND (SELF[2] <= 0) AND (SELF[3] <= 0));  
END_TYPE;


TYPE IfcContextDependentMeasure = REAL;
END_TYPE;


TYPE IfcCountMeasure = NUMBER;
END_TYPE;


TYPE IfcCurvatureMeasure = REAL;
END_TYPE;


TYPE IfcDescriptiveMeasure = STRING;
END_TYPE;


TYPE IfcDimensionCount = INTEGER;
WHERE
WR1 : { 0 < SELF <= 3 };
END_TYPE;


TYPE IfcDoseEquivalentMeasure = REAL;
END_TYPE;


TYPE IfcDynamicViscosityMeasure = REAL;
END_TYPE;


TYPE IfcElectricCapacitanceMeasure = REAL;
END_TYPE;


TYPE IfcElectricChargeMeasure = REAL;
END_TYPE;


TYPE IfcElectricConductanceMeasure = REAL;
END_TYPE;


TYPE IfcElectricCurrentMeasure = REAL;
END_TYPE;


TYPE IfcElectricResistanceMeasure = REAL;
END_TYPE;


TYPE IfcElectricVoltageMeasure = REAL;
END_TYPE;


TYPE IfcEnergyMeasure = REAL;
END_TYPE;


TYPE IfcForceMeasure = REAL;
END_TYPE;


TYPE IfcFrequencyMeasure = REAL;
END_TYPE;


TYPE IfcGloballyUniqueId = STRING(22) FIXED;
END_TYPE;


TYPE IfcHeatFluxDensityMeasure = REAL;
END_TYPE;


TYPE IfcHeatingValueMeasure = REAL;
WHERE
WR1 : SELF > 0.;
END_TYPE;


TYPE IfcIdentifier = STRING;
END_TYPE;


TYPE IfcIlluminanceMeasure = REAL;
END_TYPE;


TYPE IfcInductanceMeasure = REAL;
END_TYPE;

  
TYPE IfcInteger = INTEGER;
END_TYPE;


TYPE IfcIntegerCountRateMeasure = INTEGER;
END_TYPE;


TYPE IfcIonConcentrationMeasure = REAL;
END_TYPE;


TYPE IfcIsothermalMoistureCapacityMeasure = REAL;
END_TYPE;


TYPE IfcKinematicViscosityMeasure = REAL;
END_TYPE;


TYPE IfcLabel = STRING;
END_TYPE;


TYPE IfcLengthMeasure = REAL;
END_TYPE;


TYPE IfcLinearForceMeasure = REAL;
END_TYPE;


TYPE IfcLinearMomentMeasure = REAL;
END_TYPE;


TYPE IfcLinearStiffnessMeasure = REAL;
END_TYPE;


TYPE IfcLinearVelocityMeasure = REAL;
END_TYPE;


TYPE IfcLogical = LOGICAL;
END_TYPE;


TYPE IfcLuminousFluxMeasure = REAL;
END_TYPE;


TYPE IfcLuminousIntensityDistributionMeasure = REAL;
END_TYPE;


TYPE IfcLuminousIntensityMeasure = REAL;
END_TYPE;


TYPE IfcMagneticFluxDensityMeasure = REAL;
END_TYPE;


TYPE IfcMagneticFluxMeasure = REAL;
END_TYPE;


TYPE IfcMassDensityMeasure = REAL;
END_TYPE;


TYPE IfcMassFlowRateMeasure = REAL;
END_TYPE;


TYPE IfcMassMeasure = REAL;
END_TYPE;


TYPE IfcMassPerLengthMeasure = REAL;
END_TYPE;


TYPE IfcModulusOfElasticityMeasure = REAL;
END_TYPE;


TYPE IfcModulusOfLinearSubgradeReactionMeasure = REAL;
END_TYPE;


TYPE IfcModulusOfRotationalSubgradeReactionMeasure = REAL;  
END_TYPE;


TYPE IfcModulusOfSubgradeReactionMeasure = REAL;
END_TYPE;


TYPE IfcMoistureDiffusivityMeasure = REAL;
END_TYPE;


TYPE IfcMolecularWeightMeasure = REAL;
END_TYPE;


TYPE IfcMomentOfInertiaMeasure = REAL;
END_TYPE;


TYPE IfcMonetaryMeasure = REAL;
END_TYPE;


TYPE IfcNormalisedRatioMeasure = IfcRatioMeasure;
WHERE
WR1 : {0.0 <= SELF <= 1.0};
END_TYPE;


TYPE IfcNumericMeasure = NUMBER;
END_TYPE;


TYPE IfcPHMeasure = REAL;
WHERE
WR21 : {0.0 <= SELF <= 14.0};
END_TYPE;


TYPE IfcParameterValue = REAL;
END_TYPE;


TYPE IfcPlanarForceMeasure = REAL;
END_TYPE;


TYPE IfcPlaneAngleMeasure = REAL;
END_TYPE;


TYPE IfcPositiveLengthMeasure = IfcLengthMeasure;
WHERE
WR1 : SELF > 0.;
END_TYPE;


TYPE IfcPositivePlaneAngleMeasure = IfcPlaneAngleMeasure;
WHERE
WR1 : SELF > 0.;
END_TYPE;


TYPE IfcPositiveRatioMeasure = IfcRatioMeasure;
WHERE
WR1 : SELF > 0.;
END_TYPE;


TYPE IfcPowerMeasure = REAL;
END_TYPE;


TYPE IfcPressureMeasure = REAL;
END_TYPE;


TYPE IfcRadioActivityMeasure = REAL;
END_TYPE;


TYPE IfcRatioMeasure = REAL;
END_TYPE;


TYPE IfcReal = REAL;
END_TYPE;


TYPE IfcRotationalFrequencyMeasure = REAL;
END_TYPE;

  
TYPE IfcRotationalMassMeasure = REAL;
END_TYPE;


TYPE IfcRotationalStiffnessMeasure = REAL;
END_TYPE;


TYPE IfcSectionModulusMeasure = REAL;
END_TYPE;


TYPE IfcSectionalAreaIntegralMeasure = REAL;
END_TYPE;


TYPE IfcShearModulusMeasure = REAL;
END_TYPE;


TYPE IfcSolidAngleMeasure = REAL;
END_TYPE;


TYPE IfcSoundPowerMeasure = REAL;
END_TYPE;


TYPE IfcSoundPressureMeasure = REAL;
END_TYPE;


TYPE IfcSpecificHeatCapacityMeasure = REAL;
END_TYPE;


TYPE IfcSpecularExponent = REAL;
END_TYPE;


TYPE IfcSpecularRoughness = REAL;
WHERE
WR1 : {0.0 <= SELF <= 1.0};
END_TYPE;


TYPE IfcStrippedOptional = BOOLEAN;
END_TYPE;


TYPE IfcTemperatureGradientMeasure = REAL;
END_TYPE;


TYPE IfcText = STRING;
END_TYPE;


TYPE IfcThermalAdmittanceMeasure = REAL;
END_TYPE;


TYPE IfcThermalConductivityMeasure = REAL;
END_TYPE;


TYPE IfcThermalExpansionCoefficientMeasure = REAL;
END_TYPE;


TYPE IfcThermalResistanceMeasure = REAL;
END_TYPE;


TYPE IfcThermalTransmittanceMeasure = REAL;
END_TYPE;


TYPE IfcThermodynamicTemperatureMeasure = REAL;
END_TYPE;


TYPE IfcTimeMeasure = REAL;
END_TYPE;


TYPE IfcTimeStamp = INTEGER;
END_TYPE;


TYPE IfcTorqueMeasure = REAL;
END_TYPE;

  
TYPE IfcVaporPermeabilityMeasure = REAL;
END_TYPE;


TYPE IfcVolumeMeasure = REAL;
END_TYPE;


TYPE IfcVolumetricFlowRateMeasure = REAL;
END_TYPE;


TYPE IfcWarpingConstantMeasure = REAL;
END_TYPE;


TYPE IfcWarpingMomentMeasure = REAL;
END_TYPE;


TYPE IfcActuatorTypeEnum = ENUMERATION OF
(ELECTRICACTUATOR
,HANDOPERATEDACTUATOR
,HYDRAULICACTUATOR
,PNEUMATICACTUATOR
,THERMOSTATICACTUATOR
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcAddressTypeEnum = ENUMERATION OF
(OFFICE
,SITE
,HOME
,DISTRIBUTIONPOINT
,USERDEFINED);
END_TYPE;


TYPE IfcAirTerminalBoxTypeEnum = ENUMERATION OF
(CONSTANTFLOW
,VARIABLEFLOWPRESSUREDEPENDANT
,VARIABLEFLOWPRESSUREINDEPENDANT
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcAirTerminalTypeEnum = ENUMERATION OF
(GRILLE
,REGISTER
,DIFFUSER
,EYEBALL
,IRIS
,LINEARGRILLE
,LINEARDIFFUSER
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcAirToAirHeatRecoveryTypeEnum = ENUMERATION OF
(FIXEDPLATECOUNTERFLOWEXCHANGER
,FIXEDPLATECROSSFLOWEXCHANGER
,FIXEDPLATEPARALLELFLOWEXCHANGER
,ROTARYWHEEL
,RUNAROUNDCOILLOOP
,HEATPIPE
,TWINTOWERENTHALPYRECOVERYLOOPS
,THERMOSIPHONSEALEDTUBEHEATEXCHANGERS
,THERMOSIPHONCOILTYPEHEATEXCHANGERS
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcAlarmTypeEnum = ENUMERATION OF
(BELL
,BREAKGLASSBUTTON  
,LIGHT
,MANUALPULLBOX
,SIREN
,WHISTLE
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcAssemblyPlaceEnum = ENUMERATION OF
(SITE
,FACTORY
,NOTDEFINED);
END_TYPE;


TYPE IfcBeamTypeEnum = ENUMERATION OF
(BEAM
,JOIST
,LINTEL
,T_BEAM
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcBoilerTypeEnum = ENUMERATION OF
(WATER
,STEAM
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcBooleanOperator = ENUMERATION OF
(UNION
,INTERSECTION
,DIFFERENCE);
END_TYPE;


TYPE IfcBuildingElementProxyTypeEnum = ENUMERATION OF
(USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcCableCarrierFittingTypeEnum = ENUMERATION OF
(BEND
,CROSS
,REDUCER
,TEE
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcCableCarrierSegmentTypeEnum = ENUMERATION OF
(CABLELADDERSEGMENT
,CABLETRAYSEGMENT
,CABLETRUNKINGSEGMENT
,CONDUITSEGMENT
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcCableSegmentTypeEnum = ENUMERATION OF
(CABLESEGMENT
,CONDUCTORSEGMENT
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcChangeActionEnum = ENUMERATION OF
(NOCHANGE
,MODIFIED
,ADDED
,DELETED  
,MODIFIEDADDED
,MODIFIEDDELETED);
END_TYPE;


TYPE IfcChillerTypeEnum = ENUMERATION OF
(AIRCOOLED
,WATERCOOLED
,HEATRECOVERY
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcCoilTypeEnum = ENUMERATION OF
(DXCOOLINGCOIL
,WATERCOOLINGCOIL
,STEAMHEATINGCOIL
,WATERHEATINGCOIL
,ELECTRICHEATINGCOIL
,GASHEATINGCOIL
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcColumnTypeEnum = ENUMERATION OF
(COLUMN
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcCompressorTypeEnum = ENUMERATION OF
(DYNAMIC
,RECIPROCATING
,ROTARY
,SCROLL
,TROCHOIDAL
,SINGLESTAGE
,BOOSTER
,OPENTYPE
,HERMETIC
,SEMIHERMETIC
,WELDEDSHELLHERMETIC
,ROLLINGPISTON
,ROTARYVANE
,SINGLESCREW
,TWINSCREW
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcCondenserTypeEnum = ENUMERATION OF
(WATERCOOLEDSHELLTUBE
,WATERCOOLEDSHELLCOIL
,WATERCOOLEDTUBEINTUBE
,WATERCOOLEDBRAZEDPLATE
,AIRCOOLED
,EVAPORATIVECOOLED
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcConnectionTypeEnum = ENUMERATION OF
(ATPATH
,ATSTART
,ATEND
,NOTDEFINED);
END_TYPE;


TYPE IfcControllerTypeEnum = ENUMERATION OF
(FLOATING
,PROPORTIONAL
,PROPORTIONALINTEGRAL  
,PROPORTIONALINTEGRALDERIVATIVE
,TIMEDTWOPOSITION
,TWOPOSITION
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcCooledBeamTypeEnum = ENUMERATION OF
(ACTIVE
,PASSIVE
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcCoolingTowerTypeEnum = ENUMERATION OF
(NATURALDRAFT
,MECHANICALINDUCEDDRAFT
,MECHANICALFORCEDDRAFT
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcCoveringTypeEnum = ENUMERATION OF
(CEILING
,FLOORING
,CLADDING
,ROOFING
,INSULATION
,MEMBRANE
,SLEEVING
,WRAPPING
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcCurtainWallTypeEnum = ENUMERATION OF
(USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcDamperTypeEnum = ENUMERATION OF
(CONTROLDAMPER
,FIREDAMPER
,SMOKEDAMPER
,FIRESMOKEDAMPER
,BACKDRAFTDAMPER
,RELIEFDAMPER
,BLASTDAMPER
,GRAVITYDAMPER
,GRAVITYRELIEFDAMPER
,BALANCINGDAMPER
,FUMEHOODEXHAUST
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcDerivedUnitEnum = ENUMERATION OF
(ANGULARVELOCITYUNIT
,COMPOUNDPLANEANGLEUNIT
,DYNAMICVISCOSITYUNIT
,HEATFLUXDENSITYUNIT
,INTEGERCOUNTRATEUNIT
,ISOTHERMALMOISTURECAPACITYUNIT
,KINEMATICVISCOSITYUNIT
,LINEARVELOCITYUNIT
,MASSDENSITYUNIT
,MASSFLOWRATEUNIT
,MOISTUREDIFFUSIVITYUNIT
,MOLECULARWEIGHTUNIT
,SPECIFICHEATCAPACITYUNIT
,THERMALADMITTANCEUNIT  
,THERMALCONDUCTANCEUNIT
,THERMALRESISTANCEUNIT
,THERMALTRANSMITTANCEUNIT
,VAPORPERMEABILITYUNIT
,VOLUMETRICFLOWRATEUNIT
,ROTATIONALFREQUENCYUNIT
,TORQUEUNIT
,MOMENTOFINERTIAUNIT
,LINEARMOMENTUNIT
,LINEARFORCEUNIT
,PLANARFORCEUNIT
,MODULUSOFELASTICITYUNIT
,SHEARMODULUSUNIT
,LINEARSTIFFNESSUNIT
,ROTATIONALSTIFFNESSUNIT
,MODULUSOFSUBGRADEREACTIONUNIT
,ACCELERATIONUNIT
,CURVATUREUNIT
,HEATINGVALUEUNIT
,IONCONCENTRATIONUNIT
,LUMINOUSINTENSITYDISTRIBUTIONUNIT
,MASSPERLENGTHUNIT
,MODULUSOFLINEARSUBGRADEREACTIONUNIT
,MODULUSOFROTATIONALSUBGRADEREACTIONUNIT
,PHUNIT
,ROTATIONALMASSUNIT
,SECTIONAREAINTEGRALUNIT
,SECTIONMODULUSUNIT
,SOUNDPOWERUNIT
,SOUNDPRESSUREUNIT
,TEMPERATUREGRADIENTUNIT
,THERMALEXPANSIONCOEFFICIENTUNIT
,WARPINGCONSTANTUNIT
,WARPINGMOMENTUNIT
,USERDEFINED);
END_TYPE;


TYPE IfcDirectionSenseEnum = ENUMERATION OF
(POSITIVE
,NEGATIVE);
END_TYPE;


TYPE IfcDistributionChamberElementTypeEnum = ENUMERATION OF
(FORMEDDUCT
,INSPECTIONCHAMBER
,INSPECTIONPIT
,MANHOLE
,METERCHAMBER
,SUMP
,TRENCH
,VALVECHAMBER
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcDoorPanelOperationEnum = ENUMERATION OF
(SWINGING
,DOUBLE_ACTING
,SLIDING
,FOLDING
,REVOLVING
,ROLLINGUP
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcDoorPanelPositionEnum = ENUMERATION OF
(LEFT
,MIDDLE
,RIGHT
,NOTDEFINED);  
END_TYPE;


TYPE IfcDoorStyleConstructionEnum = ENUMERATION OF
(ALUMINIUM
,HIGH_GRADE_STEEL
,STEEL
,WOOD
,ALUMINIUM_WOOD
,ALUMINIUM_PLASTIC
,PLASTIC
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcDoorStyleOperationEnum = ENUMERATION OF
(SINGLE_SWING_LEFT
,SINGLE_SWING_RIGHT
,DOUBLE_DOOR_SINGLE_SWING
,DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT
,DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT
,DOUBLE_SWING_LEFT
,DOUBLE_SWING_RIGHT
,DOUBLE_DOOR_DOUBLE_SWING
,SLIDING_TO_LEFT
,SLIDING_TO_RIGHT
,DOUBLE_DOOR_SLIDING
,FOLDING_TO_LEFT
,FOLDING_TO_RIGHT
,DOUBLE_DOOR_FOLDING
,REVOLVING
,ROLLINGUP
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcDuctFittingTypeEnum = ENUMERATION OF
(BEND
,CONNECTOR
,ENTRY
,EXIT
,JUNCTION
,OBSTRUCTION
,TRANSITION
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcDuctSegmentTypeEnum = ENUMERATION OF
(RIGIDSEGMENT
,FLEXIBLESEGMENT
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcDuctSilencerTypeEnum = ENUMERATION OF
(FLATOVAL
,RECTANGULAR
,ROUND
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcElectricApplianceTypeEnum = ENUMERATION OF
(COMPUTER
,DIRECTWATERHEATER
,DISHWASHER
,ELECTRICCOOKER
,ELECTRICHEATER
,FACSIMILE
,FREESTANDINGFAN
,FREEZER  
,FRIDGE_FREEZER
,HANDDRYER
,INDIRECTWATERHEATER
,MICROWAVE
,PHOTOCOPIER
,PRINTER
,REFRIGERATOR
,RADIANTHEATER
,SCANNER
,TELEPHONE
,TUMBLEDRYER
,TV
,VENDINGMACHINE
,WASHINGMACHINE
,WATERHEATER
,WATERCOOLER
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcElectricFlowStorageDeviceTypeEnum = ENUMERATION OF
(BATTERY
,CAPACITORBANK
,HARMONICFILTER
,INDUCTORBANK
,UPS
,USERDEFINED
,NOTDEFINED);
END_TYPE;


TYPE IfcElectricGeneratorTypeEnum = ENUMERATION OF
(USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcElectricMotorTypeEnum = ENUMERATION OF
(DC
,INDUCTION
,POLYPHASE
,RELUCTANCESYNCHRONOUS
,SYNCHRONOUS
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcElectricTimeControlTypeEnum = ENUMERATION OF
(TIMECLOCK
,TIMEDELAY
,RELAY
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcElementAssemblyTypeEnum = ENUMERATION OF
(ACCESSORY_ASSEMBLY
,ARCH
,BEAM_GRID
,BRACED_FRAME
,GIRDER
,REINFORCEMENT_UNIT
,RIGID_FRAME
,SLAB_FIELD
,TRUSS
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcElementCompositionEnum = ENUMERATION OF
(COMPLEX
,ELEMENT
,PARTIAL);  
END_TYPE;

TYPE IfcEvaporativeCoolerTypeEnum = ENUMERATION OF
(DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER
,DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER
,DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER
,DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER
,DIRECTEVAPORATIVEAIRWASHER
,INDIRECTEVAPORATIVEPACKAGEAIRCOOLER
,INDIRECTEVAPORATIVEWETCOIL
,INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER
,INDIRECTDIRECTCOMBINATION
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcEvaporatorTypeEnum = ENUMERATION OF
(DIRECTEXPANSIONSHELLANDTUBE
,DIRECTEXPANSIONTUBEINTUBE
,DIRECTEXPANSIONBRAZEDPLATE
,FLOODEDSHELLANDTUBE
,SHELLANDCOIL
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcFanTypeEnum = ENUMERATION OF
(CENTRIFUGALFORWARDCURVED
,CENTRIFUGALRADIAL
,CENTRIFUGALBACKWARDINCLINEDCURVED
,CENTRIFUGALAIRFOIL
,TUBEAXIAL
,VANEAXIAL
,PROPELLORAXIAL
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcFilterTypeEnum = ENUMERATION OF
(AIRPARTICLEFILTER
,ODORFILTER
,OILFILTER
,STRAINER
,WATERFILTER
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcFireSuppressionTerminalTypeEnum = ENUMERATION OF
(BREECHINGINLET
,FIREHYDRANT
,HOSEREEL
,SPRINKLER
,SPRINKLERDEFLECTOR
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcFlowDirectionEnum = ENUMERATION OF
(SOURCE
,SINK
,SOURCEANDSINK
,NOTDEFINED);
END_TYPE;

TYPE IfcFlowInstrumentTypeEnum = ENUMERATION OF
(PRESSUREGAUGE
,THERMOMETER
,AMMETER
,FREQUENCYMETER
,POWERFACTORMETER  
,PHASEANGLEMETER
,VOLTMETER_PEAK
,VOLTMETER_RMS
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcFlowMeterTypeEnum = ENUMERATION OF
(ELECTRICMETER
,ENERGYMETER
,FLOWMETER
,GASMETER
,OILMETER
,WATERMETER
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcFootingTypeEnum = ENUMERATION OF
(FOOTING_BEAM
,PAD_FOOTING
,PILE_CAP
,STRIP_FOOTING
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcGeometricProjectionEnum = ENUMERATION OF
(GRAPH_VIEW
,SKETCH_VIEW
,MODEL_VIEW
,PLAN_VIEW
,REFLECTED_PLAN_VIEW
,SECTION_VIEW
,ELEVATION_VIEW
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcHeatExchangerTypeEnum = ENUMERATION OF
(PLATE
,SHELLANDTUBE
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcHumidifierTypeEnum = ENUMERATION OF
(STEAMINJECTION
,ADIABATICAIRWASHER
,ADIABATICPAN
,ADIABATICWETTEDELEMENT
,ADIABATICATOMIZING
,ADIABATICULTRASONIC
,ADIABATICRIGIDMEDIA
,ADIABATICCOMPRESSEDAIRNOZZLE
,ASSISTEDELECTRIC
,ASSISTEDNATURALGAS
,ASSISTEDPROPANE
,ASSISTEDBUTANE
,ASSISTEDSTEAM
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcInternalOrExternalEnum = ENUMERATION OF
(INTERNAL
,EXTERNAL
,NOTDEFINED);
END_TYPE;

TYPE IfcJunctionBoxTypeEnum = ENUMERATION OF  
(USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcLampTypeEnum = ENUMERATION OF
(COMPACTFLUORESCENT
,FLUORESCENT
,HIGHPRESSUREMERCURY
,HIGHPRESSURESODIUM
,METALHALIDE
,TUNGSTENFILAMENT
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcLayerSetDirectionEnum = ENUMERATION OF
(AXIS1
,AXIS2
,AXIS3);
END_TYPE;

TYPE IfcLightFixtureTypeEnum = ENUMERATION OF
(POINTSOURCE
,DIRECTIONSOURCE
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcMemberTypeEnum = ENUMERATION OF
(BRACE
,CHORD
,COLLAR
,MEMBER
,MULLION
,PLATE
,POST
,PURLIN
,RAFTER
,STRINGER
,STRUT
,STUD
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcMotorConnectionTypeEnum = ENUMERATION OF
(BELTDRIVE
,COUPLING
,DIRECTDRIVE
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcNullStyle = ENUMERATION OF
(NULL);
END_TYPE;

TYPE IfcObjectTypeEnum = ENUMERATION OF
(PRODUCT
,PROCESS
,CONTROL
,RESOURCE
,ACTOR
,GROUP
,PROJECT
,NOTDEFINED);
END_TYPE;

TYPE IfcOutletTypeEnum = ENUMERATION OF
(AUDIOVISUALOUTLET
,COMMUNICATIONSOUTLET  
,POWEROUTLET
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcPileConstructionEnum = ENUMERATION OF
(CAST_IN_PLACE
,COMPOSITE
,PRECAST_CONCRETE
,PREFAB_STEEL
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcPileTypeEnum = ENUMERATION OF
(COHESION
,FRICTION
,SUPPORT
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcPipeFittingTypeEnum = ENUMERATION OF
(BEND
,CONNECTOR
,ENTRY
,EXIT
,JUNCTION
,OBSTRUCTION
,TRANSITION
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcPipeSegmentTypeEnum = ENUMERATION OF
(FLEXIBLESEGMENT
,RIGIDSEGMENT
,GUTTER
,SPOOL
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcPlateTypeEnum = ENUMERATION OF
(CURTAIN_PANEL
,SHEET
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcProfileTypeEnum = ENUMERATION OF
(CURVE
,AREA);
END_TYPE;

TYPE IfcProtectiveDeviceTypeEnum = ENUMERATION OF
(FUSEDISCONNECTOR
,CIRCUITBREAKER
,EARTHFAILUREDEVICE
,RESIDUALCURRENTCIRCUITBREAKER
,RESIDUALCURRENTSWITCH
,VARISTOR
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcPumpTypeEnum = ENUMERATION OF
(CIRCULATOR
,ENDSUCTION
,SPLITCASE
,VERTICALINLINE  
,VERTICALTURBINE
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcRailingTypeEnum = ENUMERATION OF
(HANDRAIL
,GUARDRAIL
,BALUSTRADE
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcRampFlightTypeEnum = ENUMERATION OF
(STRAIGHT
,SPIRAL
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcRampTypeEnum = ENUMERATION OF
(STRAIGHT_RUN_RAMP
,TWO_STRAIGHT_RUN_RAMP
,QUARTER_TURN_RAMP
,TWO_QUARTER_TURN_RAMP
,HALF_TURN_RAMP
,SPIRAL_RAMP
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcReflectanceMethodEnum = ENUMERATION OF
(BLINN
,FLAT
,GLASS
,MATT
,METAL
,MIRROR
,PHONG
,PLASTIC
,STRAUSS
,NOTDEFINED);
END_TYPE;

TYPE IfcReinforcingBarRoleEnum = ENUMERATION OF
(MAIN
,SHEAR
,LIGATURE
,STUD
,PUNCHING
,EDGE
,RING
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcReinforcingBarSurfaceEnum = ENUMERATION OF
(PLAIN
,TEXTURED);
END_TYPE;

TYPE IfcRoleEnum = ENUMERATION OF
(SUPPLIER
,MANUFACTURER
,CONTRACTOR
,SUBCONTRACTOR
,ARCHITECT
,STRUCTURALENGINEER
,COSTENGINEER
,CLIENT
,BUILDINGOWNER  
,BUILDINGOPERATOR
,MECHANICALENGINEER
,ELECTRICALENGINEER
,PROJECTMANAGER
,FACILITIESMANAGER
,CIVILENGINEER
,COMISSIONINGENGINEER
,ENGINEER
,OWNER
,CONSULTANT
,CONSTRUCTIONMANAGER
,FIELDCONSTRUCTIONMANAGER
,RESELLER
,USERDEFINED);
END_TYPE;

TYPE IfcRoofTypeEnum = ENUMERATION OF
(FLAT_ROOF
,SHED_ROOF
,GABLE_ROOF
,HIP_ROOF
,HIPPED_GABLE_ROOF
,GAMBREL_ROOF
,MANSARD_ROOF
,BARREL_ROOF
,RAINBOW_ROOF
,BUTTERFLY_ROOF
,PAVILION_ROOF
,DOME_ROOF
,FREEFORM
,NOTDEFINED);
END_TYPE;

TYPE IfcSIPrefix = ENUMERATION OF
(EXA
,PETA
,TERA
,GIGA
,MEGA
,KILO
,HECTO
,DECA
,DECI
,CENTI
,MILLI
,MICRO
,NANO
,PICO
,FEMTO
,ATTO);
END_TYPE;

TYPE IfcSIUnitName = ENUMERATION OF
(AMPERE
,BECQUEREL
,CANDELA
,COULOMB
,CUBIC_METRE
,DEGREE_CELSIUS
,FARAD
,GRAM
,GRAY
,HENRY
,HERTZ
,JOULE
,KELVIN
,LUMEN
,LUX
,METRE
,MOLE
,NEWTON  
,OHM
,PASCAL
,RADIAN
,SECOND
,SIEMENS
,SIEVERT
,SQUARE_METRE
,STERADIAN
,TESLA
,VOLT
,WATT
,WEBER);
END_TYPE;

TYPE IfcSanitaryTerminalTypeEnum = ENUMERATION OF
(BATH
,BIDET
,CISTERN
,SHOWER
,SINK
,SANITARYFOUNTAIN
,TOILETPAN
,URINAL
,WASHHANDBASIN
,WCSEAT
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcSensorTypeEnum = ENUMERATION OF
(CO2SENSOR
,FIRESENSOR
,FLOWSENSOR
,GASSENSOR
,HEATSENSOR
,HUMIDITYSENSOR
,LIGHTSENSOR
,MOISTURESENSOR
,MOVEMENTSENSOR
,PRESSURESENSOR
,SMOKESENSOR
,SOUNDSENSOR
,TEMPERATURESENSOR
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcSlabTypeEnum = ENUMERATION OF
(FLOOR
,ROOF
,LANDING
,BASESLAB
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcSpaceHeaterTypeEnum = ENUMERATION OF
(SECTIONALRADIATOR
,PANELRADIATOR
,TUBULARRADIATOR
,CONVECTOR
,BASEBOARDHEATER
,FINNEDTUBEUNIT
,UNITHEATER
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcSpaceTypeEnum = ENUMERATION OF
(USERDEFINED
,NOTDEFINED);  
END_TYPE;

TYPE IfcStackTerminalTypeEnum = ENUMERATION OF
(BIRDCAGE
,COWL
,RAINWATERHOPPER
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcStairFlightTypeEnum = ENUMERATION OF
(STRAIGHT
,WINDER
,SPIRAL
,CURVED
,FREEFORM
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcStairTypeEnum = ENUMERATION OF
(STRAIGHT_RUN_STAIR
,TWO_STRAIGHT_RUN_STAIR
,QUARTER_WINDING_STAIR
,QUARTER_TURN_STAIR
,HALF_WINDING_STAIR
,HALF_TURN_STAIR
,TWO_QUARTER_WINDING_STAIR
,TWO_QUARTER_TURN_STAIR
,THREE_QUARTER_WINDING_STAIR
,THREE_QUARTER_TURN_STAIR
,SPIRAL_STAIR
,DOUBLE_RETURN_STAIR
,CURVED_RUN_STAIR
,TWO_CURVED_RUN_STAIR
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcStateEnum = ENUMERATION OF
(READWRITE
,READONLY
,LOCKED
,READWRITELOCKED
,READONLYLOCKED);
END_TYPE;

TYPE IfcSurfaceSide = ENUMERATION OF
(POSITIVE
,NEGATIVE
,BOTH);
END_TYPE;

TYPE IfcSwitchingDeviceTypeEnum = ENUMERATION OF
(CONTACTOR
,EMERGENCYSTOP
,STARTER
,SWITCHDISCONNECTOR
,TOGGLESWITCH
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcTankTypeEnum = ENUMERATION OF
(PREFORMED
,SECTIONAL
,EXPANSION
,PRESSUREVESSEL
,USERDEFINED
,NOTDEFINED);
END_TYPE;
  
TYPE IfcTendonTypeEnum = ENUMERATION OF
(STRAND
,WIRE
,BAR
,COATED
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcTransformerTypeEnum = ENUMERATION OF
(CURRENT
,FREQUENCY
,VOLTAGE
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcTransitionCode = ENUMERATION OF
(DISCONTINUOUS
,CONTINUOUS
,CONTSAMEGRADIENT
,CONTSAMEGRADIENTSAMECURVATURE);
END_TYPE;

TYPE IfcTransportElementTypeEnum = ENUMERATION OF
(ELEVATOR
,ESCALATOR
,MOVINGWALKWAY
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcTrimmingPreference = ENUMERATION OF
(CARTESIAN
,PARAMETER
,UNSPECIFIED);
END_TYPE;

TYPE IfcTubeBundleTypeEnum = ENUMERATION OF
(FINNED
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcUnitEnum = ENUMERATION OF
(ABSORBEDDOSEUNIT
,AMOUNTOFSUBSTANCEUNIT
,AREAUNIT
,DOSEEQUIVALENTUNIT
,ELECTRICCAPACITANCEUNIT
,ELECTRICCHARGEUNIT
,ELECTRICCONDUCTANCEUNIT
,ELECTRICCURRENTUNIT
,ELECTRICRESISTANCEUNIT
,ELECTRICVOLTAGEUNIT
,ENERGYUNIT
,FORCEUNIT
,FREQUENCYUNIT
,ILLUMINANCEUNIT
,INDUCTANCEUNIT
,LENGTHUNIT
,LUMINOUSFLUXUNIT
,LUMINOUSINTENSITYUNIT
,MAGNETICFLUXDENSITYUNIT
,MAGNETICFLUXUNIT
,MASSUNIT
,PLANEANGLEUNIT
,POWERUNIT
,PRESSUREUNIT
,RADIOACTIVITYUNIT  
,SOLIDANGLEUNIT
,THERMODYNAMICTEMPERATUREUNIT
,TIMEUNIT
,VOLUMEUNIT
,USERDEFINED);
END_TYPE;

TYPE IfcUnitaryEquipmentTypeEnum = ENUMERATION OF
(AIRHANDLER
,AIRCONDITIONINGUNIT
,SPLITSYSTEM
,ROOFTOPUNIT
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcValveTypeEnum = ENUMERATION OF
(AIRRELEASE
,ANTIVACUUM
,CHANGEOVER
,CHECK
,COMMISSIONING
,DIVERTING
,DRAWOFFCOCK
,DOUBLECHECK
,DOUBLEREGULATING
,FAUCET
,FLUSHING
,GASCOCK
,GASTAP
,ISOLATING
,MIXING
,PRESSUREREDUCING
,PRESSURERELIEF
,REGULATING
,SAFETYCUTOFF
,STEAMTRAP
,STOPCOCK
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcWallTypeEnum = ENUMERATION OF
(STANDARD
,POLYGONAL
,SHEAR
,ELEMENTEDWALL
,PLUMBINGWALL
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcWasteTerminalTypeEnum = ENUMERATION OF
(FLOORTRAP
,FLOORWASTE
,GULLYSUMP
,GULLYTRAP
,GREASEINTERCEPTOR
,OILINTERCEPTOR
,PETROLINTERCEPTOR
,ROOFDRAIN
,WASTEDISPOSALUNIT
,WASTETRAP
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcWindowPanelOperationEnum = ENUMERATION OF
(SIDEHUNGRIGHTHAND
,SIDEHUNGLEFTHAND
,TILTANDTURNRIGHTHAND  
,TILTANDTURNLEFTHAND
,TOPHUNG
,BOTTOMHUNG
,PIVOTHORIZONTAL
,PIVOTVERTICAL
,SLIDINGHORIZONTAL
,SLIDINGVERTICAL
,REMOVABLECASEMENT
,FIXEDCASEMENT
,OTHEROPERATION
,NOTDEFINED);
END_TYPE;

TYPE IfcWindowPanelPositionEnum = ENUMERATION OF
(LEFT
,MIDDLE
,RIGHT
,BOTTOM
,TOP
,NOTDEFINED);
END_TYPE;

TYPE IfcWindowStyleConstructionEnum = ENUMERATION OF
(ALUMINIUM
,HIGH_GRADE_STEEL
,STEEL
,WOOD
,ALUMINIUM_WOOD
,PLASTIC
,OTHER_CONSTRUCTION
,NOTDEFINED);
END_TYPE;

TYPE IfcWindowStyleOperationEnum = ENUMERATION OF
(SINGLE_PANEL
,DOUBLE_PANEL_VERTICAL
,DOUBLE_PANEL_HORIZONTAL
,TRIPLE_PANEL_VERTICAL
,TRIPLE_PANEL_BOTTOM
,TRIPLE_PANEL_TOP
,TRIPLE_PANEL_LEFT
,TRIPLE_PANEL_RIGHT
,TRIPLE_PANEL_HORIZONTAL
,USERDEFINED
,NOTDEFINED);
END_TYPE;

TYPE IfcAxis2Placement = SELECT
(IfcAxis2Placement2D
,IfcAxis2Placement3D);
END_TYPE;

TYPE IfcBooleanOperand = SELECT
(IfcBooleanResult
,IfcHalfSpaceSolid
,IfcSolidModel);
END_TYPE;

TYPE IfcClassificationNotationSelect = SELECT
(IfcClassificationReference);
END_TYPE;

TYPE IfcColour = SELECT
(IfcColourSpecification);
END_TYPE;

TYPE IfcColourOrFactor = SELECT
(IfcColourRgb
,IfcNormalisedRatioMeasure);
END_TYPE;
  
TYPE IfcCurveOrEdgeCurve = SELECT
(IfcBoundedCurve);
END_TYPE;

TYPE IfcDerivedMeasureValue = SELECT
(IfcAbsorbedDoseMeasure
,IfcAccelerationMeasure
,IfcAngularVelocityMeasure
,IfcCompoundPlaneAngleMeasure
,IfcCurvatureMeasure
,IfcDoseEquivalentMeasure
,IfcDynamicViscosityMeasure
,IfcElectricCapacitanceMeasure
,IfcElectricChargeMeasure
,IfcElectricConductanceMeasure
,IfcElectricResistanceMeasure
,IfcElectricVoltageMeasure
,IfcEnergyMeasure
,IfcForceMeasure
,IfcFrequencyMeasure
,IfcHeatFluxDensityMeasure
,IfcHeatingValueMeasure
,IfcIlluminanceMeasure
,IfcInductanceMeasure
,IfcIntegerCountRateMeasure
,IfcIonConcentrationMeasure
,IfcIsothermalMoistureCapacityMeasure
,IfcKinematicViscosityMeasure
,IfcLinearForceMeasure
,IfcLinearMomentMeasure
,IfcLinearStiffnessMeasure
,IfcLinearVelocityMeasure
,IfcLuminousFluxMeasure
,IfcLuminousIntensityDistributionMeasure
,IfcMagneticFluxDensityMeasure
,IfcMagneticFluxMeasure
,IfcMassDensityMeasure
,IfcMassFlowRateMeasure
,IfcMassPerLengthMeasure
,IfcModulusOfElasticityMeasure
,IfcModulusOfLinearSubgradeReactionMeasure
,IfcModulusOfRotationalSubgradeReactionMeasure
,IfcModulusOfSubgradeReactionMeasure
,IfcMoistureDiffusivityMeasure
,IfcMolecularWeightMeasure
,IfcMomentOfInertiaMeasure
,IfcMonetaryMeasure
,IfcPHMeasure
,IfcPlanarForceMeasure
,IfcPowerMeasure
,IfcPressureMeasure
,IfcRadioActivityMeasure
,IfcRotationalFrequencyMeasure
,IfcRotationalMassMeasure
,IfcRotationalStiffnessMeasure
,IfcSectionModulusMeasure
,IfcSectionalAreaIntegralMeasure
,IfcShearModulusMeasure
,IfcSoundPowerMeasure
,IfcSoundPressureMeasure
,IfcSpecificHeatCapacityMeasure
,IfcTemperatureGradientMeasure
,IfcThermalAdmittanceMeasure
,IfcThermalConductivityMeasure
,IfcThermalExpansionCoefficientMeasure
,IfcThermalResistanceMeasure
,IfcThermalTransmittanceMeasure
,IfcTimeStamp
,IfcTorqueMeasure
,IfcVaporPermeabilityMeasure
,IfcVolumetricFlowRateMeasure  
,IfcWarpingConstantMeasure
,IfcWarpingMomentMeasure);
END_TYPE;

TYPE IfcGeometricSetSelect = SELECT
(IfcCurve
,IfcPoint
,IfcSurface);
END_TYPE;

TYPE IfcLayeredItem = SELECT
(IfcRepresentation
,IfcRepresentationItem);
END_TYPE;

TYPE IfcMaterialSelect = SELECT
(IfcMaterial
,IfcMaterialLayer
,IfcMaterialLayerSet
,IfcMaterialLayerSetUsage
,IfcMaterialList);
END_TYPE;

TYPE IfcMeasureValue = SELECT
(IfcAmountOfSubstanceMeasure
,IfcAreaMeasure
,IfcComplexNumber
,IfcContextDependentMeasure
,IfcCountMeasure
,IfcDescriptiveMeasure
,IfcElectricCurrentMeasure
,IfcLengthMeasure
,IfcLuminousIntensityMeasure
,IfcMassMeasure
,IfcNormalisedRatioMeasure
,IfcNumericMeasure
,IfcParameterValue
,IfcPlaneAngleMeasure
,IfcPositiveLengthMeasure
,IfcPositivePlaneAngleMeasure
,IfcPositiveRatioMeasure
,IfcRatioMeasure
,IfcSolidAngleMeasure
,IfcThermodynamicTemperatureMeasure
,IfcTimeMeasure
,IfcVolumeMeasure);
END_TYPE;

TYPE IfcPresentationStyleSelect = SELECT
(IfcCurveStyle
,IfcNullStyle
,IfcSurfaceStyle);
END_TYPE;

TYPE IfcShell = SELECT
(IfcClosedShell
,IfcOpenShell);
END_TYPE;

TYPE IfcSimpleValue = SELECT
(IfcBoolean
,IfcIdentifier
,IfcInteger
,IfcLabel
,IfcLogical
,IfcReal
,IfcText);
END_TYPE;

TYPE IfcSpecularHighlightSelect = SELECT
(IfcSpecularExponent  
,IfcSpecularRoughness);
END_TYPE;

TYPE IfcSurfaceStyleElementSelect = SELECT
(IfcSurfaceStyleShading);
END_TYPE;

TYPE IfcTrimmingSelect = SELECT
(IfcCartesianPoint
,IfcParameterValue);
END_TYPE;

TYPE IfcUnit = SELECT
(IfcDerivedUnit
,IfcNamedUnit);
END_TYPE;

TYPE IfcValue = SELECT
(IfcDerivedMeasureValue
,IfcMeasureValue
,IfcSimpleValue);
END_TYPE;

TYPE IfcVectorOrDirection = SELECT
(IfcDirection
,IfcVector);
END_TYPE;

ENTITY IfcActorRole;
Role : IfcRoleEnum;
UserDefinedRole : OPTIONAL IfcLabel;
Description : OPTIONAL IfcText;
WHERE
WR1 : (Role <> IfcRoleEnum.USERDEFINED) OR
((Role = IfcRoleEnum.USERDEFINED) AND
EXISTS(SELF.UserDefinedRole));
END_ENTITY;


ENTITY IfcActuatorType
SUBTYPE OF (IfcDistributionControlElementType);
PredefinedType : IfcActuatorTypeEnum;
END_ENTITY;


ENTITY IfcAddress
ABSTRACT SUPERTYPE OF (ONEOF
(IfcPostalAddress
,IfcTelecomAddress));
Purpose : OPTIONAL IfcAddressTypeEnum;
Description : OPTIONAL IfcText;
UserDefinedPurpose : OPTIONAL IfcLabel;
INVERSE
OfPerson : SET [0:?] OF IfcPerson FOR Addresses;
OfOrganization : SET [0:?] OF IfcOrganization FOR Addresses;
WHERE
WR1 : (NOT(EXISTS(Purpose))) OR
((Purpose <> IfcAddressTypeEnum.USERDEFINED) OR
((Purpose = IfcAddressTypeEnum.USERDEFINED) AND
EXISTS(SELF.UserDefinedPurpose)));
END_ENTITY;


ENTITY IfcAirTerminalBoxType
SUBTYPE OF (IfcFlowControllerType);
PredefinedType : IfcAirTerminalBoxTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcAirTerminalBoxTypeEnum.USERDEFINED) OR
((PredefinedType = IfcAirTerminalBoxTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcAirTerminalType
SUBTYPE OF (IfcFlowTerminalType);
PredefinedType : IfcAirTerminalTypeEnum;  
WHERE
WR1 : (PredefinedType <> IfcAirTerminalTypeEnum.USERDEFINED) OR
((PredefinedType = IfcAirTerminalTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcAirToAirHeatRecoveryType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcAirToAirHeatRecoveryTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcAirToAirHeatRecoveryTypeEnum.USERDEFINED) OR
((PredefinedType = IfcAirToAirHeatRecoveryTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcAlarmType
SUBTYPE OF (IfcDistributionControlElementType);
PredefinedType : IfcAlarmTypeEnum;
END_ENTITY;


ENTITY IfcApplication;
ApplicationDeveloper : IfcOrganization;
Version : IfcLabel;
ApplicationFullName : IfcLabel;
ApplicationIdentifier : IfcIdentifier;
UNIQUE
UR1 : ApplicationIdentifier;
UR2 : ApplicationFullName, Version;
END_ENTITY;


ENTITY IfcArbitraryClosedProfileDef
SUPERTYPE OF (ONEOF
(IfcArbitraryProfileDefWithVoids))
SUBTYPE OF (IfcProfileDef);
OuterCurve : IfcCurve;
WHERE
WR1 : OuterCurve.Dim = 2;
WR2 : NOT('IFC2X3_CV_V2_0.IFCLINE' IN TYPEOF(OuterCurve));
END_ENTITY;


ENTITY IfcArbitraryOpenProfileDef
SUPERTYPE OF (ONEOF
(IfcCenterLineProfileDef))
SUBTYPE OF (IfcProfileDef);
Curve : IfcBoundedCurve;
WHERE
WR11 : ('IFC2X3_CV_V2_0.IFCCENTERLINEPROFILEDEF' IN TYPEOF(SELF)) OR
(SELF\IfcProfileDef.ProfileType = IfcProfileTypeEnum.CURVE);
WR12 : Curve.Dim = 2;
END_ENTITY;


ENTITY IfcArbitraryProfileDefWithVoids
SUBTYPE OF (IfcArbitraryClosedProfileDef);
InnerCurves : SET [1:?] OF IfcCurve;
WHERE
WR1 : SELF\IfcProfileDef.ProfileType = AREA;
WR2 : SIZEOF(QUERY(temp <* InnerCurves | temp.Dim <> 2)) = 0;
WR3 : SIZEOF(QUERY(temp <* InnerCurves | 'IFC2X3_CV_V2_0.IFCLINE' IN TYPEOF(temp))) = 0;
END_ENTITY;


ENTITY IfcAsymmetricIShapeProfileDef
SUBTYPE OF (IfcIShapeProfileDef);
TopFlangeWidth : IfcPositiveLengthMeasure;
TopFlangeThickness : OPTIONAL IfcPositiveLengthMeasure;
TopFlangeFilletRadius : OPTIONAL IfcPositiveLengthMeasure;
CentreOfGravityInY : OPTIONAL IfcPositiveLengthMeasure;
END_ENTITY;


ENTITY IfcAxis1Placement
SUBTYPE OF (IfcPlacement);
Axis : OPTIONAL IfcDirection;
DERIVE  
Z : IfcDirection := NVL (IfcNormalise(Axis), IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0,0.0,1.0]));
WHERE
WR1 : (NOT (EXISTS (Axis))) OR (Axis.Dim = 3);
WR2 : SELF\IfcPlacement.Location.Dim = 3;
END_ENTITY;


ENTITY IfcAxis2Placement2D
SUBTYPE OF (IfcPlacement);
RefDirection : OPTIONAL IfcDirection;
DERIVE
P : LIST [2:2] OF IfcDirection := IfcBuild2Axes(RefDirection);
WHERE
WR1 : (NOT (EXISTS (RefDirection))) OR (RefDirection.Dim = 2);
WR2 : SELF\IfcPlacement.Location.Dim = 2;
END_ENTITY;


ENTITY IfcAxis2Placement3D
SUBTYPE OF (IfcPlacement);
Axis : OPTIONAL IfcDirection;
RefDirection : OPTIONAL IfcDirection;
DERIVE
P : LIST [3:3] OF IfcDirection := IfcBuildAxes(Axis, RefDirection);
WHERE
WR1 : SELF\IfcPlacement.Location.Dim = 3;
WR2 : (NOT (EXISTS (Axis))) OR (Axis.Dim = 3);
WR3 : (NOT (EXISTS (RefDirection))) OR (RefDirection.Dim = 3);
WR4 : (NOT (EXISTS (Axis))) OR (NOT (EXISTS (RefDirection))) OR (IfcCrossProduct(Axis,RefDirection).Magnitude > 0.0);
WR5 : NOT ((EXISTS (Axis)) XOR (EXISTS (RefDirection)));
END_ENTITY;


ENTITY IfcBeam
SUBTYPE OF (IfcBuildingElement);
END_ENTITY;


ENTITY IfcBeamType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcBeamTypeEnum;
END_ENTITY;


ENTITY IfcBoilerType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcBoilerTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcBoilerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcBoilerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcBooleanClippingResult
SUBTYPE OF (IfcBooleanResult);
WHERE
WR1 : ('IFC2X3_CV_V2_0.IFCSWEPTAREASOLID' IN TYPEOF(FirstOperand)) OR ('IFC2X3_CV_V2_0.IFCBOOLEANCLIPPINGRESULT' IN TYPEOF(FirstOperand));
WR2 : ('IFC2X3_CV_V2_0.IFCHALFSPACESOLID' IN TYPEOF(SecondOperand));
WR3 : Operator = DIFFERENCE;
END_ENTITY;


ENTITY IfcBooleanResult
SUPERTYPE OF (ONEOF
(IfcBooleanClippingResult))
SUBTYPE OF (IfcGeometricRepresentationItem);
Operator : IfcBooleanOperator;
FirstOperand : IfcBooleanOperand;
SecondOperand : IfcBooleanOperand;
DERIVE
Dim : IfcDimensionCount := FirstOperand.Dim;
WHERE
WR1 : FirstOperand.Dim = SecondOperand.Dim;
END_ENTITY;


ENTITY IfcBoundedCurve  
ABSTRACT SUPERTYPE OF (ONEOF
(IfcCompositeCurve
,IfcPolyline
,IfcTrimmedCurve))
SUBTYPE OF (IfcCurve);
END_ENTITY;


ENTITY IfcBoundingBox
SUBTYPE OF (IfcGeometricRepresentationItem);
Corner : IfcCartesianPoint;
XDim : IfcPositiveLengthMeasure;
YDim : IfcPositiveLengthMeasure;
ZDim : IfcPositiveLengthMeasure;
DERIVE
Dim : IfcDimensionCount := 3;
END_ENTITY;


ENTITY IfcBuilding
SUBTYPE OF (IfcSpatialStructureElement);
ElevationOfRefHeight : OPTIONAL IfcLengthMeasure;
ElevationOfTerrain : OPTIONAL IfcLengthMeasure;
BuildingAddress : OPTIONAL IfcPostalAddress;
END_ENTITY;


ENTITY IfcBuildingElement
ABSTRACT SUPERTYPE OF (ONEOF
(IfcBeam
,IfcBuildingElementComponent
,IfcBuildingElementProxy
,IfcColumn
,IfcCovering
,IfcCurtainWall
,IfcDoor
,IfcFooting
,IfcMember
,IfcPile
,IfcPlate
,IfcRailing
,IfcRamp
,IfcRampFlight
,IfcRoof
,IfcSlab
,IfcStair
,IfcStairFlight
,IfcWall
,IfcWindow))
SUBTYPE OF (IfcElement);
END_ENTITY;


ENTITY IfcBuildingElementComponent
ABSTRACT SUPERTYPE OF (ONEOF
(IfcBuildingElementPart
,IfcReinforcingElement))
SUBTYPE OF (IfcBuildingElement);
END_ENTITY;


ENTITY IfcBuildingElementPart
SUBTYPE OF (IfcBuildingElementComponent);
END_ENTITY;


ENTITY IfcBuildingElementProxy
SUBTYPE OF (IfcBuildingElement);
CompositionType : OPTIONAL IfcElementCompositionEnum;
WHERE
WR1 : EXISTS(SELF\IfcRoot.Name);
END_ENTITY;


ENTITY IfcBuildingElementProxyType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcBuildingElementProxyTypeEnum;
END_ENTITY;

  
ENTITY IfcBuildingElementType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcBeamType
,IfcBuildingElementProxyType
,IfcColumnType
,IfcCoveringType
,IfcCurtainWallType
,IfcMemberType
,IfcPlateType
,IfcRailingType
,IfcRampFlightType
,IfcSlabType
,IfcStairFlightType
,IfcWallType))
SUBTYPE OF (IfcElementType);
END_ENTITY;


ENTITY IfcBuildingStorey
SUBTYPE OF (IfcSpatialStructureElement);
Elevation : OPTIONAL IfcLengthMeasure;
END_ENTITY;


ENTITY IfcCShapeProfileDef
SUBTYPE OF (IfcParameterizedProfileDef);
Depth : IfcPositiveLengthMeasure;
Width : IfcPositiveLengthMeasure;
WallThickness : IfcPositiveLengthMeasure;
Girth : IfcPositiveLengthMeasure;
InternalFilletRadius : OPTIONAL IfcPositiveLengthMeasure;
CentreOfGravityInX : OPTIONAL IfcPositiveLengthMeasure;
WHERE
WR1 : Girth < (Depth / 2.);
WR2 : NOT(EXISTS(InternalFilletRadius)) OR
((InternalFilletRadius <= Width/2.) AND (InternalFilletRadius <= Depth/2.));
WR3 : (WallThickness < Width/2.) AND (WallThickness < Depth/2.);
END_ENTITY;


ENTITY IfcCableCarrierFittingType
SUBTYPE OF (IfcFlowFittingType);
PredefinedType : IfcCableCarrierFittingTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcCableCarrierFittingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCableCarrierFittingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcCableCarrierSegmentType
SUBTYPE OF (IfcFlowSegmentType);
PredefinedType : IfcCableCarrierSegmentTypeEnum;
END_ENTITY;


ENTITY IfcCableSegmentType
SUBTYPE OF (IfcFlowSegmentType);
PredefinedType : IfcCableSegmentTypeEnum;
END_ENTITY;


ENTITY IfcCartesianPoint
SUBTYPE OF (IfcPoint);
Coordinates : LIST [1:3] OF IfcLengthMeasure;
DERIVE
Dim : IfcDimensionCount := HIINDEX(Coordinates);
WHERE
WR1 : HIINDEX(Coordinates) >= 2;
END_ENTITY;


ENTITY IfcCartesianTransformationOperator
ABSTRACT SUPERTYPE OF (ONEOF
(IfcCartesianTransformationOperator2D
,IfcCartesianTransformationOperator3D))
SUBTYPE OF (IfcGeometricRepresentationItem);
Axis1 : OPTIONAL IfcDirection;  
Axis2 : OPTIONAL IfcDirection;
LocalOrigin : IfcCartesianPoint;
Scale : OPTIONAL REAL;
DERIVE
Scl : REAL := NVL(Scale, 1.0);
Dim : IfcDimensionCount := LocalOrigin.Dim;
WHERE
WR1 : Scl > 0.0;
END_ENTITY;


ENTITY IfcCartesianTransformationOperator2D
SUPERTYPE OF (ONEOF
(IfcCartesianTransformationOperator2DnonUniform))
SUBTYPE OF (IfcCartesianTransformationOperator);
DERIVE
U : LIST [2:2] OF IfcDirection := IfcBaseAxis(2,SELF\IfcCartesianTransformationOperator.Axis1,
SELF\IfcCartesianTransformationOperator.Axis2,?);
WHERE
WR1 : SELF\IfcCartesianTransformationOperator.Dim = 2;
WR2 : NOT(EXISTS(SELF\IfcCartesianTransformationOperator.Axis1)) OR
(SELF\IfcCartesianTransformationOperator.Axis1.Dim = 2);
WR3 : NOT(EXISTS(SELF\IfcCartesianTransformationOperator.Axis2)) OR
(SELF\IfcCartesianTransformationOperator.Axis2.Dim = 2);
END_ENTITY;


ENTITY IfcCartesianTransformationOperator2DnonUniform
SUBTYPE OF (IfcCartesianTransformationOperator2D);
Scale2 : OPTIONAL REAL;
DERIVE
Scl2 : REAL := NVL(Scale2, SELF\IfcCartesianTransformationOperator.Scl);
WHERE
WR1 : Scl2 > 0.0;
END_ENTITY;


ENTITY IfcCartesianTransformationOperator3D
SUPERTYPE OF (ONEOF
(IfcCartesianTransformationOperator3DnonUniform))
SUBTYPE OF (IfcCartesianTransformationOperator);
Axis3 : OPTIONAL IfcDirection;
DERIVE
U : LIST [3:3] OF IfcDirection := IfcBaseAxis(3,SELF\IfcCartesianTransformationOperator.Axis1,
SELF\IfcCartesianTransformationOperator.Axis2,Axis3);
WHERE
WR1 : SELF\IfcCartesianTransformationOperator.Dim = 3;
WR2 : NOT(EXISTS(SELF\IfcCartesianTransformationOperator.Axis1)) OR
(SELF\IfcCartesianTransformationOperator.Axis1.Dim = 3);
WR3 : NOT(EXISTS(SELF\IfcCartesianTransformationOperator.Axis2)) OR
(SELF\IfcCartesianTransformationOperator.Axis2.Dim = 3);
WR4 : NOT(EXISTS(Axis3)) OR (Axis3.Dim = 3);
END_ENTITY;


ENTITY IfcCartesianTransformationOperator3DnonUniform
SUBTYPE OF (IfcCartesianTransformationOperator3D);
Scale2 : OPTIONAL REAL;
Scale3 : OPTIONAL REAL;
DERIVE
Scl2 : REAL := NVL(Scale2, SELF\IfcCartesianTransformationOperator.Scl);
Scl3 : REAL := NVL(Scale3, SELF\IfcCartesianTransformationOperator.Scl);
WHERE
WR1 : Scl2 > 0.0;
WR2 : Scl3 > 0.0;
END_ENTITY;


ENTITY IfcCenterLineProfileDef
SUBTYPE OF (IfcArbitraryOpenProfileDef);
Thickness : IfcPositiveLengthMeasure;
END_ENTITY;


ENTITY IfcChillerType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcChillerTypeEnum;  
WHERE
WR1 : (PredefinedType <> IfcChillerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcChillerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcCircle
SUBTYPE OF (IfcConic);
Radius : IfcPositiveLengthMeasure;
END_ENTITY;


ENTITY IfcCircleHollowProfileDef
SUBTYPE OF (IfcCircleProfileDef);
WallThickness : IfcPositiveLengthMeasure;
WHERE
WR1 : WallThickness < SELF\IfcCircleProfileDef.Radius;
END_ENTITY;


ENTITY IfcCircleProfileDef
SUPERTYPE OF (ONEOF
(IfcCircleHollowProfileDef))
SUBTYPE OF (IfcParameterizedProfileDef);
Radius : IfcPositiveLengthMeasure;
END_ENTITY;


ENTITY IfcClassification;
Source : IfcLabel;
Edition : IfcLabel;
EditionDate : OPTIONAL IfcStrippedOptional;
Name : IfcLabel;
END_ENTITY;


ENTITY IfcClassificationReference
SUBTYPE OF (IfcExternalReference);
ReferencedSource : OPTIONAL IfcClassification;
END_ENTITY;


ENTITY IfcClosedShell
SUBTYPE OF (IfcConnectedFaceSet);
END_ENTITY;


ENTITY IfcCoilType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcCoilTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcCoilTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCoilTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcColourRgb
SUBTYPE OF (IfcColourSpecification);
Red : IfcNormalisedRatioMeasure;
Green : IfcNormalisedRatioMeasure;
Blue : IfcNormalisedRatioMeasure;
END_ENTITY;


ENTITY IfcColourSpecification
ABSTRACT SUPERTYPE OF (ONEOF
(IfcColourRgb));
Name : OPTIONAL IfcLabel;
END_ENTITY;


ENTITY IfcColumn
SUBTYPE OF (IfcBuildingElement);
END_ENTITY;


ENTITY IfcColumnType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcColumnTypeEnum;
END_ENTITY;


ENTITY IfcComplexProperty  
SUBTYPE OF (IfcProperty);
UsageName : IfcIdentifier;
HasProperties : SET [1:?] OF IfcProperty;
WHERE
WR21 : SIZEOF(QUERY(temp <* HasProperties | SELF :=: temp)) = 0;
WR22 : IfcUniquePropertyName(HasProperties);
END_ENTITY;


ENTITY IfcCompositeCurve
SUBTYPE OF (IfcBoundedCurve);
Segments : LIST [1:?] OF IfcCompositeCurveSegment;
SelfIntersect : LOGICAL;
DERIVE
NSegments : INTEGER := SIZEOF(Segments);
ClosedCurve : LOGICAL := Segments[NSegments].Transition <> Discontinuous;
WHERE
WR41 : ((NOT ClosedCurve) AND (SIZEOF(QUERY(Temp <* Segments | Temp.Transition = Discontinuous)) = 1)) OR ((ClosedCurve) AND (SIZEOF(QUERY(Temp <* Segments | Temp.Transition = Discontinuous)) = 0));
WR42 : SIZEOF( QUERY( Temp <* Segments | Temp.Dim <> Segments[1].Dim)) = 0;
END_ENTITY;


ENTITY IfcCompositeCurveSegment
SUBTYPE OF (IfcGeometricRepresentationItem);
Transition : IfcTransitionCode;
SameSense : BOOLEAN;
ParentCurve : IfcCurve;
DERIVE
Dim : IfcDimensionCount := ParentCurve.Dim;
INVERSE
UsingCurves : SET [1:?] OF IfcCompositeCurve FOR Segments;
WHERE
WR1 : ('IFC2X3_CV_V2_0.IFCBOUNDEDCURVE' IN TYPEOF(ParentCurve));
END_ENTITY;


ENTITY IfcCompositeProfileDef
SUBTYPE OF (IfcProfileDef);
Profiles : SET [2:?] OF IfcProfileDef;
Label : OPTIONAL IfcLabel;
WHERE
WR1 : SIZEOF(QUERY(temp <* Profiles | temp.ProfileType <> Profiles[1].ProfileType)) = 0;
WR2 : SIZEOF(QUERY(temp <* Profiles | 'IFC2X3_CV_V2_0.IFCCOMPOSITEPROFILEDEF' IN TYPEOF(temp))) = 0;
END_ENTITY;


ENTITY IfcCompressorType
SUBTYPE OF (IfcFlowMovingDeviceType);
PredefinedType : IfcCompressorTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcCompressorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCompressorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcCondenserType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcCondenserTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcCondenserTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCondenserTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcConic
ABSTRACT SUPERTYPE OF (ONEOF
(IfcCircle
,IfcEllipse))
SUBTYPE OF (IfcCurve);
Position : IfcAxis2Placement;
END_ENTITY;


ENTITY IfcConnectedFaceSet
SUPERTYPE OF (ONEOF
(IfcClosedShell
,IfcOpenShell))  
SUBTYPE OF (IfcTopologicalRepresentationItem);
CfsFaces : SET [1:?] OF IfcFace;
END_ENTITY;


ENTITY IfcConnectionCurveGeometry
SUBTYPE OF (IfcConnectionGeometry);
CurveOnRelatingElement : IfcCurveOrEdgeCurve;
CurveOnRelatedElement : OPTIONAL IfcCurveOrEdgeCurve;
END_ENTITY;


ENTITY IfcConnectionGeometry
ABSTRACT SUPERTYPE OF (ONEOF
(IfcConnectionCurveGeometry));
END_ENTITY;


ENTITY IfcControllerType
SUBTYPE OF (IfcDistributionControlElementType);
PredefinedType : IfcControllerTypeEnum;
END_ENTITY;


ENTITY IfcConversionBasedUnit
SUBTYPE OF (IfcNamedUnit);
Name : IfcLabel;
ConversionFactor : IfcMeasureWithUnit;
END_ENTITY;


ENTITY IfcCooledBeamType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcCooledBeamTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcCooledBeamTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCooledBeamTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcCoolingTowerType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcCoolingTowerTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcCoolingTowerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCoolingTowerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcCovering
SUBTYPE OF (IfcBuildingElement);
PredefinedType : OPTIONAL IfcCoveringTypeEnum;
WHERE
WR61 : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcCoveringTypeEnum.USERDEFINED) OR
((PredefinedType = IfcCoveringTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
END_ENTITY;


ENTITY IfcCoveringType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcCoveringTypeEnum;
END_ENTITY;


ENTITY IfcCurtainWall
SUBTYPE OF (IfcBuildingElement);
END_ENTITY;


ENTITY IfcCurtainWallType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcCurtainWallTypeEnum;
END_ENTITY;


ENTITY IfcCurve
ABSTRACT SUPERTYPE OF (ONEOF
(IfcBoundedCurve
,IfcConic
,IfcLine))
SUBTYPE OF (IfcGeometricRepresentationItem);  
DERIVE
Dim : IfcDimensionCount := IfcCurveDim(SELF);
END_ENTITY;


ENTITY IfcCurveStyle
SUBTYPE OF (IfcPresentationStyle);
CurveFont : OPTIONAL IfcStrippedOptional;
CurveWidth : OPTIONAL IfcStrippedOptional;
CurveColour : IfcColour;
END_ENTITY;


ENTITY IfcDamperType
SUBTYPE OF (IfcFlowControllerType);
PredefinedType : IfcDamperTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcDamperTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDamperTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;


ENTITY IfcDerivedProfileDef
SUBTYPE OF (IfcProfileDef);
ParentProfile : IfcProfileDef;
Operator : IfcCartesianTransformationOperator2D;
Label : OPTIONAL IfcLabel;
WHERE
WR1 : SELF\IfcProfileDef.ProfileType = ParentProfile.ProfileType;
END_ENTITY;


ENTITY IfcDerivedUnit;
Elements : SET [1:?] OF IfcDerivedUnitElement;
UnitType : IfcDerivedUnitEnum;
UserDefinedType : OPTIONAL IfcLabel;
DERIVE
Dimensions : IfcDimensionalExponents := IfcDeriveDimensionalExponents(Elements);
WHERE
WR1 : (SIZEOF (Elements) > 1) OR ((SIZEOF (Elements) = 1) AND (Elements[1].Exponent <> 1 ));
WR2 : (UnitType <> IfcDerivedUnitEnum.USERDEFINED) OR
((UnitType = IfcDerivedUnitEnum.USERDEFINED) AND
(EXISTS(SELF.UserDefinedType)));
END_ENTITY;


ENTITY IfcDerivedUnitElement;
Unit : IfcNamedUnit;
Exponent : INTEGER;
END_ENTITY;


ENTITY IfcDimensionalExponents;
LengthExponent : INTEGER;
MassExponent : INTEGER;
TimeExponent : INTEGER;
ElectricCurrentExponent : INTEGER;
ThermodynamicTemperatureExponent : INTEGER;
AmountOfSubstanceExponent : INTEGER;
LuminousIntensityExponent : INTEGER;
END_ENTITY;

ENTITY IfcDirection
SUBTYPE OF (IfcGeometricRepresentationItem);
DirectionRatios : LIST [2:3] OF REAL;
DERIVE
Dim : IfcDimensionCount := HIINDEX(DirectionRatios);
END_ENTITY;

ENTITY IfcDiscreteAccessory
SUBTYPE OF (IfcElementComponent);
END_ENTITY;

ENTITY IfcDiscreteAccessoryType
SUBTYPE OF (IfcElementComponentType);
END_ENTITY;
  
ENTITY IfcDistributionChamberElement
SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcDistributionChamberElementType
SUBTYPE OF (IfcDistributionFlowElementType);
PredefinedType : IfcDistributionChamberElementTypeEnum;
END_ENTITY;

ENTITY IfcDistributionControlElement
SUBTYPE OF (IfcDistributionElement);
ControlElementId : OPTIONAL IfcIdentifier;
INVERSE
AssignedToFlowElement : SET [0:1] OF IfcRelFlowControlElements FOR RelatedControlElements;
END_ENTITY;

ENTITY IfcDistributionControlElementType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcActuatorType
,IfcAlarmType
,IfcControllerType
,IfcFlowInstrumentType
,IfcSensorType))
SUBTYPE OF (IfcDistributionElementType);
END_ENTITY;

ENTITY IfcDistributionElement
SUPERTYPE OF (ONEOF
(IfcDistributionControlElement
,IfcDistributionFlowElement))
SUBTYPE OF (IfcElement);
END_ENTITY;

ENTITY IfcDistributionElementType
SUPERTYPE OF (ONEOF
(IfcDistributionControlElementType
,IfcDistributionFlowElementType))
SUBTYPE OF (IfcElementType);
END_ENTITY;

ENTITY IfcDistributionFlowElement
SUPERTYPE OF (ONEOF
(IfcDistributionChamberElement
,IfcEnergyConversionDevice
,IfcFlowController
,IfcFlowFitting
,IfcFlowMovingDevice
,IfcFlowSegment
,IfcFlowStorageDevice
,IfcFlowTerminal
,IfcFlowTreatmentDevice))
SUBTYPE OF (IfcDistributionElement);
INVERSE
HasControlElements : SET [0:1] OF IfcRelFlowControlElements FOR RelatingFlowElement;
END_ENTITY;

ENTITY IfcDistributionFlowElementType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcDistributionChamberElementType
,IfcEnergyConversionDeviceType
,IfcFlowControllerType
,IfcFlowFittingType
,IfcFlowMovingDeviceType
,IfcFlowSegmentType
,IfcFlowStorageDeviceType
,IfcFlowTerminalType
,IfcFlowTreatmentDeviceType))
SUBTYPE OF (IfcDistributionElementType);
END_ENTITY;

ENTITY IfcDistributionPort  
SUBTYPE OF (IfcPort);
FlowDirection : OPTIONAL IfcFlowDirectionEnum;
END_ENTITY;

ENTITY IfcDoor
SUBTYPE OF (IfcBuildingElement);
OverallHeight : OPTIONAL IfcPositiveLengthMeasure;
OverallWidth : OPTIONAL IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcDoorLiningProperties
SUBTYPE OF (IfcPropertySetDefinition);
LiningDepth : OPTIONAL IfcPositiveLengthMeasure;
LiningThickness : OPTIONAL IfcPositiveLengthMeasure;
ThresholdDepth : OPTIONAL IfcPositiveLengthMeasure;
ThresholdThickness : OPTIONAL IfcPositiveLengthMeasure;
TransomThickness : OPTIONAL IfcPositiveLengthMeasure;
TransomOffset : OPTIONAL IfcLengthMeasure;
LiningOffset : OPTIONAL IfcLengthMeasure;
ThresholdOffset : OPTIONAL IfcLengthMeasure;
CasingThickness : OPTIONAL IfcPositiveLengthMeasure;
CasingDepth : OPTIONAL IfcPositiveLengthMeasure;
ShapeAspectStyle : OPTIONAL IfcStrippedOptional;
WHERE
WR31 : NOT(NOT(EXISTS(LiningDepth)) AND EXISTS(LiningThickness));
WR32 : NOT(NOT(EXISTS(ThresholdDepth)) AND EXISTS(ThresholdThickness));
WR33 : (EXISTS(TransomOffset) AND EXISTS(TransomThickness)) XOR
(NOT(EXISTS(TransomOffset)) AND NOT(EXISTS(TransomThickness)));
WR34 : (EXISTS(CasingDepth) AND EXISTS(CasingThickness)) XOR
(NOT(EXISTS(CasingDepth)) AND NOT(EXISTS(CasingThickness)));
WR35 : EXISTS(SELF\IfcPropertySetDefinition.DefinesType[1]) AND
('IFC2X3_CV_V2_0.IFCDOORSTYLE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]));
END_ENTITY;

ENTITY IfcDoorPanelProperties
SUBTYPE OF (IfcPropertySetDefinition);
PanelDepth : OPTIONAL IfcPositiveLengthMeasure;
PanelOperation : IfcDoorPanelOperationEnum;
PanelWidth : OPTIONAL IfcNormalisedRatioMeasure;
PanelPosition : IfcDoorPanelPositionEnum;
ShapeAspectStyle : OPTIONAL IfcStrippedOptional;
WHERE
WR31 : EXISTS(SELF\IfcPropertySetDefinition.DefinesType[1]) AND
('IFC2X3_CV_V2_0.IFCDOORSTYLE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]));
END_ENTITY;

ENTITY IfcDoorStyle
SUBTYPE OF (IfcTypeProduct);
OperationType : IfcDoorStyleOperationEnum;
ConstructionType : IfcDoorStyleConstructionEnum;
ParameterTakesPrecedence : BOOLEAN;
Sizeable : BOOLEAN;
END_ENTITY;

ENTITY IfcDuctFittingType
SUBTYPE OF (IfcFlowFittingType);
PredefinedType : IfcDuctFittingTypeEnum;
WHERE
WR2 : (PredefinedType <> IfcDuctFittingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDuctFittingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcDuctSegmentType
SUBTYPE OF (IfcFlowSegmentType);
PredefinedType : IfcDuctSegmentTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcDuctSegmentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDuctSegmentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcDuctSilencerType  
SUBTYPE OF (IfcFlowTreatmentDeviceType);
PredefinedType : IfcDuctSilencerTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcDuctSilencerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcDuctSilencerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcElectricApplianceType
SUBTYPE OF (IfcFlowTerminalType);
PredefinedType : IfcElectricApplianceTypeEnum;
END_ENTITY;

ENTITY IfcElectricFlowStorageDeviceType
SUBTYPE OF (IfcFlowStorageDeviceType);
PredefinedType : IfcElectricFlowStorageDeviceTypeEnum;
END_ENTITY;

ENTITY IfcElectricGeneratorType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcElectricGeneratorTypeEnum;
END_ENTITY;

ENTITY IfcElectricMotorType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcElectricMotorTypeEnum;
END_ENTITY;

ENTITY IfcElectricTimeControlType
SUBTYPE OF (IfcFlowControllerType);
PredefinedType : IfcElectricTimeControlTypeEnum;
END_ENTITY;

ENTITY IfcElectricalCircuit
SUBTYPE OF (IfcSystem);
END_ENTITY;

ENTITY IfcElement
ABSTRACT SUPERTYPE OF (ONEOF
(IfcBuildingElement
,IfcDistributionElement
,IfcElementAssembly
,IfcElementComponent
,IfcFeatureElement
,IfcFurnishingElement
,IfcTransportElement))
SUBTYPE OF (IfcProduct);
Tag : OPTIONAL IfcIdentifier;
INVERSE
FillsVoids : SET [0:1] OF IfcRelFillsElement FOR RelatedBuildingElement;
ConnectedTo : SET [0:?] OF IfcRelConnectsElements FOR RelatingElement;
HasPorts : SET [0:?] OF IfcRelConnectsPortToElement FOR RelatedElement;
HasOpenings : SET [0:?] OF IfcRelVoidsElement FOR RelatingBuildingElement;
IsConnectionRealization : SET [0:?] OF IfcRelConnectsWithRealizingElements FOR RealizingElements;
ConnectedFrom : SET [0:?] OF IfcRelConnectsElements FOR RelatedElement;
ContainedInStructure : SET [0:1] OF IfcRelContainedInSpatialStructure FOR RelatedElements;
END_ENTITY;

ENTITY IfcElementAssembly
SUBTYPE OF (IfcElement);
AssemblyPlace : OPTIONAL IfcAssemblyPlaceEnum;
PredefinedType : IfcElementAssemblyTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcElementAssemblyTypeEnum.USERDEFINED) OR ((PredefinedType = IfcElementAssemblyTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcElementComponent
ABSTRACT SUPERTYPE OF (ONEOF
(IfcDiscreteAccessory
,IfcFastener))
SUBTYPE OF (IfcElement);  
END_ENTITY;

ENTITY IfcElementComponentType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcDiscreteAccessoryType
,IfcFastenerType))
SUBTYPE OF (IfcElementType);
END_ENTITY;

ENTITY IfcElementType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcBuildingElementType
,IfcDistributionElementType
,IfcElementComponentType
,IfcFurnishingElementType
,IfcSpatialStructureElementType
,IfcTransportElementType))
SUBTYPE OF (IfcTypeProduct);
ElementType : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcElementarySurface
ABSTRACT SUPERTYPE OF (ONEOF
(IfcPlane))
SUBTYPE OF (IfcSurface);
Position : IfcAxis2Placement3D;
DERIVE
Dim : IfcDimensionCount := Position.Dim;
END_ENTITY;

ENTITY IfcEllipse
SUBTYPE OF (IfcConic);
SemiAxis1 : IfcPositiveLengthMeasure;
SemiAxis2 : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcEllipseProfileDef
SUBTYPE OF (IfcParameterizedProfileDef);
SemiAxis1 : IfcPositiveLengthMeasure;
SemiAxis2 : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcEnergyConversionDevice
SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcEnergyConversionDeviceType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcAirToAirHeatRecoveryType
,IfcBoilerType
,IfcChillerType
,IfcCoilType
,IfcCondenserType
,IfcCooledBeamType
,IfcCoolingTowerType
,IfcElectricGeneratorType
,IfcElectricMotorType
,IfcEvaporativeCoolerType
,IfcEvaporatorType
,IfcHeatExchangerType
,IfcHumidifierType
,IfcMotorConnectionType
,IfcSpaceHeaterType
,IfcTransformerType
,IfcTubeBundleType
,IfcUnitaryEquipmentType))
SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcEvaporativeCoolerType
SUBTYPE OF (IfcEnergyConversionDeviceType);  
PredefinedType : IfcEvaporativeCoolerTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcEvaporativeCoolerTypeEnum.USERDEFINED) OR
((PredefinedType = IfcEvaporativeCoolerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcEvaporatorType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcEvaporatorTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcEvaporatorTypeEnum.USERDEFINED) OR
((PredefinedType = IfcEvaporatorTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcExternalReference
ABSTRACT SUPERTYPE OF (ONEOF
(IfcClassificationReference));
Location : OPTIONAL IfcLabel;
ItemReference : OPTIONAL IfcIdentifier;
Name : OPTIONAL IfcLabel;
WHERE
WR1 : EXISTS(ItemReference) OR EXISTS(Location) OR EXISTS(Name);
END_ENTITY;

ENTITY IfcExtrudedAreaSolid
SUBTYPE OF (IfcSweptAreaSolid);
ExtrudedDirection : IfcDirection;
Depth : IfcPositiveLengthMeasure;
WHERE
WR31 : IfcDotProduct(IfcRepresentationItem() || IfcGeometricRepresentationItem() || IfcDirection([0.0,0.0,1.0]), SELF.ExtrudedDirection) <> 0.0;
END_ENTITY;

ENTITY IfcFace
SUBTYPE OF (IfcTopologicalRepresentationItem);
Bounds : SET [1:?] OF IfcFaceBound;
WHERE
WR1 : SIZEOF(QUERY(temp <* Bounds | 'IFC2X3_CV_V2_0.IFCFACEOUTERBOUND' IN TYPEOF(temp))) <= 1;
END_ENTITY;

ENTITY IfcFaceBasedSurfaceModel
SUBTYPE OF (IfcGeometricRepresentationItem);
FbsmFaces : SET [1:?] OF IfcConnectedFaceSet;
DERIVE
Dim : IfcDimensionCount := 3;
END_ENTITY;

ENTITY IfcFaceBound
SUPERTYPE OF (ONEOF
(IfcFaceOuterBound))
SUBTYPE OF (IfcTopologicalRepresentationItem);
Bound : IfcLoop;
Orientation : BOOLEAN;
END_ENTITY;

ENTITY IfcFaceOuterBound
SUBTYPE OF (IfcFaceBound);
END_ENTITY;

ENTITY IfcFacetedBrep
SUBTYPE OF (IfcManifoldSolidBrep);
END_ENTITY;

ENTITY IfcFanType
SUBTYPE OF (IfcFlowMovingDeviceType);
PredefinedType : IfcFanTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcFanTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFanTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;
  
ENTITY IfcFastener
SUPERTYPE OF (ONEOF
(IfcMechanicalFastener))
SUBTYPE OF (IfcElementComponent);
END_ENTITY;

ENTITY IfcFastenerType
SUPERTYPE OF (ONEOF
(IfcMechanicalFastenerType))
SUBTYPE OF (IfcElementComponentType);
END_ENTITY;

ENTITY IfcFeatureElement
ABSTRACT SUPERTYPE OF (ONEOF
(IfcFeatureElementSubtraction))
SUBTYPE OF (IfcElement);
END_ENTITY;

ENTITY IfcFeatureElementSubtraction
ABSTRACT SUPERTYPE OF (ONEOF
(IfcOpeningElement))
SUBTYPE OF (IfcFeatureElement);
INVERSE
VoidsElements : IfcRelVoidsElement FOR RelatedOpeningElement;
END_ENTITY;

ENTITY IfcFilterType
SUBTYPE OF (IfcFlowTreatmentDeviceType);
PredefinedType : IfcFilterTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcFilterTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFilterTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcFireSuppressionTerminalType
SUBTYPE OF (IfcFlowTerminalType);
PredefinedType : IfcFireSuppressionTerminalTypeEnum;
END_ENTITY;

ENTITY IfcFlowController
SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowControllerType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcAirTerminalBoxType
,IfcDamperType
,IfcElectricTimeControlType
,IfcFlowMeterType
,IfcProtectiveDeviceType
,IfcSwitchingDeviceType
,IfcValveType))
SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowFitting
SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowFittingType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcCableCarrierFittingType
,IfcDuctFittingType
,IfcJunctionBoxType
,IfcPipeFittingType))
SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowInstrumentType
SUBTYPE OF (IfcDistributionControlElementType);
PredefinedType : IfcFlowInstrumentTypeEnum;  
END_ENTITY;

ENTITY IfcFlowMeterType
SUBTYPE OF (IfcFlowControllerType);
PredefinedType : IfcFlowMeterTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcFlowMeterTypeEnum.USERDEFINED) OR
((PredefinedType = IfcFlowMeterTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcFlowMovingDevice
SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowMovingDeviceType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcCompressorType
,IfcFanType
,IfcPumpType))
SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowSegment
SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowSegmentType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcCableCarrierSegmentType
,IfcCableSegmentType
,IfcDuctSegmentType
,IfcPipeSegmentType))
SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowStorageDevice
SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowStorageDeviceType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcElectricFlowStorageDeviceType
,IfcTankType))
SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowTerminal
SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowTerminalType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcAirTerminalType
,IfcElectricApplianceType
,IfcFireSuppressionTerminalType
,IfcLampType
,IfcLightFixtureType
,IfcOutletType
,IfcSanitaryTerminalType
,IfcStackTerminalType
,IfcWasteTerminalType))
SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFlowTreatmentDevice
SUBTYPE OF (IfcDistributionFlowElement);
END_ENTITY;

ENTITY IfcFlowTreatmentDeviceType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcDuctSilencerType  
,IfcFilterType))
SUBTYPE OF (IfcDistributionFlowElementType);
END_ENTITY;

ENTITY IfcFooting
SUBTYPE OF (IfcBuildingElement);
PredefinedType : IfcFootingTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcFootingTypeEnum.USERDEFINED) OR ((PredefinedType = IfcFootingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcFurnishingElement
SUBTYPE OF (IfcElement);
END_ENTITY;

ENTITY IfcFurnishingElementType
SUBTYPE OF (IfcElementType);
END_ENTITY;

ENTITY IfcGeometricCurveSet
SUBTYPE OF (IfcGeometricSet);
WHERE
WR1 : SIZEOF(QUERY(Temp <* SELF\IfcGeometricSet.Elements |
'IFC2X3_CV_V2_0.IFCSURFACE' IN TYPEOF(Temp))) = 0;
END_ENTITY;

ENTITY IfcGeometricRepresentationContext
SUPERTYPE OF (ONEOF
(IfcGeometricRepresentationSubContext))
SUBTYPE OF (IfcRepresentationContext);
CoordinateSpaceDimension : IfcDimensionCount;
Precision : OPTIONAL REAL;
WorldCoordinateSystem : IfcAxis2Placement;
TrueNorth : OPTIONAL IfcDirection;
INVERSE
HasSubContexts : SET [0:?] OF IfcGeometricRepresentationSubContext FOR ParentContext;
END_ENTITY;

ENTITY IfcGeometricRepresentationItem
ABSTRACT SUPERTYPE OF (ONEOF
(IfcBooleanResult
,IfcBoundingBox
,IfcCartesianTransformationOperator
,IfcCompositeCurveSegment
,IfcCurve
,IfcDirection
,IfcFaceBasedSurfaceModel
,IfcGeometricSet
,IfcHalfSpaceSolid
,IfcPlacement
,IfcPoint
,IfcShellBasedSurfaceModel
,IfcSolidModel
,IfcSurface
,IfcVector))
SUBTYPE OF (IfcRepresentationItem);
END_ENTITY;

ENTITY IfcGeometricRepresentationSubContext
SUBTYPE OF (IfcGeometricRepresentationContext);
ParentContext : IfcGeometricRepresentationContext;
TargetScale : OPTIONAL IfcPositiveRatioMeasure;
TargetView : IfcGeometricProjectionEnum;
UserDefinedTargetView : OPTIONAL IfcLabel;
DERIVE
SELF\IfcGeometricRepresentationContext.WorldCoordinateSystem : IfcAxis2Placement := ParentContext.WorldCoordinateSystem;
SELF\IfcGeometricRepresentationContext.CoordinateSpaceDimension : IfcDimensionCount := ParentContext.CoordinateSpaceDimension;  
SELF\IfcGeometricRepresentationContext.TrueNorth : IfcDirection := NVL(ParentContext.TrueNorth,SELF.WorldCoordinateSystem.P[2]);
SELF\IfcGeometricRepresentationContext.Precision : REAL := NVL(ParentContext.Precision,1.E-5);
WHERE
WR31 : NOT('IFC2X3_CV_V2_0.IFCGEOMETRICREPRESENTATIONSUBCONTEXT' IN TYPEOF(ParentContext));
WR32 : (TargetView <> IfcGeometricProjectionEnum.USERDEFINED) OR
((TargetView = IfcGeometricProjectionEnum.USERDEFINED) AND
EXISTS(UserDefinedTargetView));
END_ENTITY;

ENTITY IfcGeometricSet
SUPERTYPE OF (ONEOF
(IfcGeometricCurveSet))
SUBTYPE OF (IfcGeometricRepresentationItem);
Elements : SET [1:?] OF IfcGeometricSetSelect;
DERIVE
Dim : IfcDimensionCount := Elements[1].Dim;
WHERE
WR21 : SIZEOF(QUERY(Temp <* Elements |
Temp.Dim <> Elements[1].Dim))
= 0;
END_ENTITY;

ENTITY IfcGrid
SUBTYPE OF (IfcProduct);
UAxes : LIST [1:?] OF UNIQUE IfcGridAxis;
VAxes : LIST [1:?] OF UNIQUE IfcGridAxis;
WAxes : OPTIONAL LIST [1:?] OF UNIQUE IfcGridAxis;
INVERSE
ContainedInStructure : SET [0:1] OF IfcRelContainedInSpatialStructure FOR RelatedElements;
WHERE
WR41 : EXISTS(SELF\IfcProduct.ObjectPlacement);
END_ENTITY;

ENTITY IfcGridAxis;
AxisTag : OPTIONAL IfcLabel;
AxisCurve : IfcCurve;
SameSense : IfcBoolean;
INVERSE
PartOfW : SET [0:1] OF IfcGrid FOR WAxes;
PartOfV : SET [0:1] OF IfcGrid FOR VAxes;
PartOfU : SET [0:1] OF IfcGrid FOR UAxes;
WHERE
WR1 : AxisCurve.Dim = 2;
WR2 : (SIZEOF(PartOfU) = 1) XOR (SIZEOF(PartOfV) = 1) XOR (SIZEOF(PartOfW) = 1);
END_ENTITY;

ENTITY IfcGroup
SUPERTYPE OF (ONEOF
(IfcSystem
,IfcZone))
SUBTYPE OF (IfcObject);
INVERSE
IsGroupedBy : IfcRelAssignsToGroup FOR RelatingGroup;
END_ENTITY;

ENTITY IfcHalfSpaceSolid
SUPERTYPE OF (ONEOF
(IfcPolygonalBoundedHalfSpace))
SUBTYPE OF (IfcGeometricRepresentationItem);
BaseSurface : IfcSurface;
AgreementFlag : BOOLEAN;
DERIVE
Dim : IfcDimensionCount := 3;
END_ENTITY;

ENTITY IfcHeatExchangerType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcHeatExchangerTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcHeatExchangerTypeEnum.USERDEFINED) OR  
((PredefinedType = IfcHeatExchangerTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcHumidifierType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcHumidifierTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcHumidifierTypeEnum.USERDEFINED) OR
((PredefinedType = IfcHumidifierTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcIShapeProfileDef
SUPERTYPE OF (ONEOF
(IfcAsymmetricIShapeProfileDef))
SUBTYPE OF (IfcParameterizedProfileDef);
OverallWidth : IfcPositiveLengthMeasure;
OverallDepth : IfcPositiveLengthMeasure;
WebThickness : IfcPositiveLengthMeasure;
FlangeThickness : IfcPositiveLengthMeasure;
FilletRadius : OPTIONAL IfcPositiveLengthMeasure;
WHERE
WR1 : FlangeThickness < (OverallDepth / 2.);
WR2 : WebThickness < OverallWidth;
WR3 : NOT(EXISTS(FilletRadius)) OR
((FilletRadius <= (OverallWidth - WebThickness)/2.) AND
(FilletRadius <= (OverallDepth - (2. * FlangeThickness))/2.));
END_ENTITY;

ENTITY IfcJunctionBoxType
SUBTYPE OF (IfcFlowFittingType);
PredefinedType : IfcJunctionBoxTypeEnum;
END_ENTITY;

ENTITY IfcLShapeProfileDef
SUBTYPE OF (IfcParameterizedProfileDef);
Depth : IfcPositiveLengthMeasure;
Width : OPTIONAL IfcPositiveLengthMeasure;
Thickness : IfcPositiveLengthMeasure;
FilletRadius : OPTIONAL IfcPositiveLengthMeasure;
EdgeRadius : OPTIONAL IfcPositiveLengthMeasure;
LegSlope : OPTIONAL IfcPlaneAngleMeasure;
CentreOfGravityInX : OPTIONAL IfcPositiveLengthMeasure;
CentreOfGravityInY : OPTIONAL IfcPositiveLengthMeasure;
WHERE
WR21 : Thickness < Depth;
WR22 : NOT(EXISTS(Width)) OR (Thickness < Width);
END_ENTITY;

ENTITY IfcLampType
SUBTYPE OF (IfcFlowTerminalType);
PredefinedType : IfcLampTypeEnum;
END_ENTITY;

ENTITY IfcLightFixtureType
SUBTYPE OF (IfcFlowTerminalType);
PredefinedType : IfcLightFixtureTypeEnum;
END_ENTITY;

ENTITY IfcLine
SUBTYPE OF (IfcCurve);
Pnt : IfcCartesianPoint;
Dir : IfcVector;
WHERE
WR1 : Dir.Dim = Pnt.Dim;
END_ENTITY;

ENTITY IfcLocalPlacement
SUBTYPE OF (IfcObjectPlacement);
PlacementRelTo : OPTIONAL IfcObjectPlacement;
RelativePlacement : IfcAxis2Placement;
WHERE  
WR21 : IfcCorrectLocalPlacement(RelativePlacement, PlacementRelTo);
END_ENTITY;

ENTITY IfcLoop
SUPERTYPE OF (ONEOF
(IfcPolyLoop))
SUBTYPE OF (IfcTopologicalRepresentationItem);
END_ENTITY;

ENTITY IfcManifoldSolidBrep
ABSTRACT SUPERTYPE OF (ONEOF
(IfcFacetedBrep))
SUBTYPE OF (IfcSolidModel);
Outer : IfcClosedShell;
END_ENTITY;

ENTITY IfcMappedItem
SUBTYPE OF (IfcRepresentationItem);
MappingSource : IfcRepresentationMap;
MappingTarget : IfcCartesianTransformationOperator;
END_ENTITY;

ENTITY IfcMaterial;
Name : IfcLabel;
INVERSE
HasRepresentation : SET [0:1] OF IfcMaterialDefinitionRepresentation FOR RepresentedMaterial;
ClassifiedAs : SET [0:1] OF IfcMaterialClassificationRelationship FOR ClassifiedMaterial;
END_ENTITY;

ENTITY IfcMaterialClassificationRelationship;
MaterialClassifications : SET [1:?] OF IfcClassificationNotationSelect;
ClassifiedMaterial : IfcMaterial;
END_ENTITY;

ENTITY IfcMaterialDefinitionRepresentation
SUBTYPE OF (IfcProductRepresentation);
RepresentedMaterial : IfcMaterial;
WHERE
WR11 : SIZEOF(QUERY(temp <* Representations |
(NOT('IFC2X3_CV_V2_0.IFCSTYLEDREPRESENTATION' IN TYPEOF(temp)))
)) = 0;
END_ENTITY;

ENTITY IfcMaterialLayer;
Material : OPTIONAL IfcMaterial;
LayerThickness : IfcPositiveLengthMeasure;
IsVentilated : OPTIONAL IfcLogical;
INVERSE
ToMaterialLayerSet : IfcMaterialLayerSet FOR MaterialLayers;
END_ENTITY;

ENTITY IfcMaterialLayerSet;
MaterialLayers : LIST [1:?] OF IfcMaterialLayer;
LayerSetName : OPTIONAL IfcLabel;
DERIVE
TotalThickness : IfcLengthMeasure := IfcMlsTotalThickness(SELF);
END_ENTITY;

ENTITY IfcMaterialLayerSetUsage;
ForLayerSet : IfcMaterialLayerSet;
LayerSetDirection : IfcLayerSetDirectionEnum;
DirectionSense : IfcDirectionSenseEnum;
OffsetFromReferenceLine : IfcLengthMeasure;
END_ENTITY;

ENTITY IfcMaterialList;
Materials : LIST [1:?] OF IfcMaterial;
END_ENTITY;

ENTITY IfcMeasureWithUnit;
ValueComponent : IfcValue;  
UnitComponent : IfcUnit;
END_ENTITY;

ENTITY IfcMechanicalFastener
SUBTYPE OF (IfcFastener);
NominalDiameter : OPTIONAL IfcPositiveLengthMeasure;
NominalLength : OPTIONAL IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcMechanicalFastenerType
SUBTYPE OF (IfcFastenerType);
END_ENTITY;

ENTITY IfcMember
SUBTYPE OF (IfcBuildingElement);
END_ENTITY;

ENTITY IfcMemberType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcMemberTypeEnum;
END_ENTITY;

ENTITY IfcMotorConnectionType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcMotorConnectionTypeEnum;
END_ENTITY;

ENTITY IfcNamedUnit
ABSTRACT SUPERTYPE OF (ONEOF
(IfcConversionBasedUnit
,IfcSIUnit));
Dimensions : IfcDimensionalExponents;
UnitType : IfcUnitEnum;
WHERE
WR1 : IfcCorrectDimensions (SELF.UnitType, SELF.Dimensions);
END_ENTITY;

ENTITY IfcObject
ABSTRACT SUPERTYPE OF (ONEOF
(IfcGroup
,IfcProduct
,IfcProject))
SUBTYPE OF (IfcObjectDefinition);
ObjectType : OPTIONAL IfcLabel;
INVERSE
IsDefinedBy : SET [0:?] OF IfcRelDefines FOR RelatedObjects;
WHERE
WR1 : SIZEOF(QUERY(temp <* IsDefinedBy | 'IFC2X3_CV_V2_0.IFCRELDEFINESBYTYPE' IN TYPEOF(temp))) <= 1;
END_ENTITY;

ENTITY IfcObjectDefinition
ABSTRACT SUPERTYPE OF (ONEOF
(IfcObject
,IfcTypeObject))
SUBTYPE OF (IfcRoot);
INVERSE
HasAssignments : SET [0:?] OF IfcRelAssigns FOR RelatedObjects;
IsDecomposedBy : SET [0:?] OF IfcRelDecomposes FOR RelatingObject;
Decomposes : SET [0:1] OF IfcRelDecomposes FOR RelatedObjects;
HasAssociations : SET [0:?] OF IfcRelAssociates FOR RelatedObjects;
END_ENTITY;

ENTITY IfcObjectPlacement
ABSTRACT SUPERTYPE OF (ONEOF
(IfcLocalPlacement));
INVERSE
PlacesObject : SET [1:1] OF IfcProduct FOR ObjectPlacement;
ReferencedByPlacements : SET [0:?] OF IfcLocalPlacement FOR PlacementRelTo;
END_ENTITY;

ENTITY IfcOpenShell  
SUBTYPE OF (IfcConnectedFaceSet);
END_ENTITY;

ENTITY IfcOpeningElement
SUBTYPE OF (IfcFeatureElementSubtraction);
INVERSE
HasFillings : SET [0:?] OF IfcRelFillsElement FOR RelatingOpeningElement;
END_ENTITY;

ENTITY IfcOrganization;
Id : OPTIONAL IfcIdentifier;
Name : IfcLabel;
Description : OPTIONAL IfcText;
Roles : OPTIONAL LIST [1:?] OF IfcActorRole;
Addresses : OPTIONAL LIST [1:?] OF IfcAddress;
INVERSE
Engages : SET [0:?] OF IfcPersonAndOrganization FOR TheOrganization;
END_ENTITY;

ENTITY IfcOutletType
SUBTYPE OF (IfcFlowTerminalType);
PredefinedType : IfcOutletTypeEnum;
END_ENTITY;

ENTITY IfcOwnerHistory;
OwningUser : IfcPersonAndOrganization;
OwningApplication : IfcApplication;
State : OPTIONAL IfcStateEnum;
ChangeAction : IfcChangeActionEnum;
LastModifiedDate : OPTIONAL IfcTimeStamp;
LastModifyingUser : OPTIONAL IfcPersonAndOrganization;
LastModifyingApplication : OPTIONAL IfcApplication;
CreationDate : IfcTimeStamp;
END_ENTITY;

ENTITY IfcParameterizedProfileDef
ABSTRACT SUPERTYPE OF (ONEOF
(IfcCShapeProfileDef
,IfcCircleProfileDef
,IfcEllipseProfileDef
,IfcIShapeProfileDef
,IfcLShapeProfileDef
,IfcRectangleProfileDef
,IfcTShapeProfileDef
,IfcUShapeProfileDef
,IfcZShapeProfileDef))
SUBTYPE OF (IfcProfileDef);
Position : IfcAxis2Placement2D;
END_ENTITY;

ENTITY IfcPerson;
Id : OPTIONAL IfcIdentifier;
FamilyName : OPTIONAL IfcLabel;
GivenName : OPTIONAL IfcLabel;
MiddleNames : OPTIONAL LIST [1:?] OF IfcLabel;
PrefixTitles : OPTIONAL LIST [1:?] OF IfcLabel;
SuffixTitles : OPTIONAL LIST [1:?] OF IfcLabel;
Roles : OPTIONAL LIST [1:?] OF IfcActorRole;
Addresses : OPTIONAL LIST [1:?] OF IfcAddress;
INVERSE
EngagedIn : SET [0:?] OF IfcPersonAndOrganization FOR ThePerson;
WHERE
WR1 : EXISTS(FamilyName) OR
EXISTS(GivenName);
END_ENTITY;

ENTITY IfcPersonAndOrganization;
ThePerson : IfcPerson;
TheOrganization : IfcOrganization;
Roles : OPTIONAL LIST [1:?] OF IfcActorRole;
END_ENTITY;
  
ENTITY IfcPile
SUBTYPE OF (IfcBuildingElement);
PredefinedType : IfcPileTypeEnum;
ConstructionType : OPTIONAL IfcPileConstructionEnum;
WHERE
WR1 : (PredefinedType <> IfcPileTypeEnum.USERDEFINED) OR ((PredefinedType = IfcPileTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcPipeFittingType
SUBTYPE OF (IfcFlowFittingType);
PredefinedType : IfcPipeFittingTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcPipeFittingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcPipeFittingTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcPipeSegmentType
SUBTYPE OF (IfcFlowSegmentType);
PredefinedType : IfcPipeSegmentTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcPipeSegmentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcPipeSegmentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcPlacement
ABSTRACT SUPERTYPE OF (ONEOF
(IfcAxis1Placement
,IfcAxis2Placement2D
,IfcAxis2Placement3D))
SUBTYPE OF (IfcGeometricRepresentationItem);
Location : IfcCartesianPoint;
DERIVE
Dim : IfcDimensionCount := Location.Dim;
END_ENTITY;

ENTITY IfcPlane
SUBTYPE OF (IfcElementarySurface);
END_ENTITY;

ENTITY IfcPlate
SUBTYPE OF (IfcBuildingElement);
END_ENTITY;

ENTITY IfcPlateType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcPlateTypeEnum;
END_ENTITY;

ENTITY IfcPoint
ABSTRACT SUPERTYPE OF (ONEOF
(IfcCartesianPoint))
SUBTYPE OF (IfcGeometricRepresentationItem);
END_ENTITY;

ENTITY IfcPolyLoop
SUBTYPE OF (IfcLoop);
Polygon : LIST [3:?] OF UNIQUE IfcCartesianPoint;
WHERE
WR21 : SIZEOF(QUERY(Temp <* Polygon | Temp.Dim <> Polygon[1].Dim)) = 0;
END_ENTITY;

ENTITY IfcPolygonalBoundedHalfSpace
SUBTYPE OF (IfcHalfSpaceSolid);
Position : IfcAxis2Placement3D;
PolygonalBoundary : IfcBoundedCurve;
WHERE
WR41 : PolygonalBoundary.Dim = 2;
WR42 : SIZEOF(TYPEOF(PolygonalBoundary) * [
'IFC2X3_CV_V2_0.IFCPOLYLINE',  
'IFC2X3_CV_V2_0.IFCCOMPOSITECURVE']
) = 1;
END_ENTITY;

ENTITY IfcPolyline
SUBTYPE OF (IfcBoundedCurve);
Points : LIST [2:?] OF IfcCartesianPoint;
WHERE
WR41 : SIZEOF(QUERY(Temp <* Points | Temp.Dim <> Points[1].Dim)) = 0;
END_ENTITY;

ENTITY IfcPort
ABSTRACT SUPERTYPE OF (ONEOF
(IfcDistributionPort))
SUBTYPE OF (IfcProduct);
INVERSE
ContainedIn : IfcRelConnectsPortToElement FOR RelatingPort;
ConnectedFrom : SET [0:1] OF IfcRelConnectsPorts FOR RelatedPort;
ConnectedTo : SET [0:1] OF IfcRelConnectsPorts FOR RelatingPort;
END_ENTITY;

ENTITY IfcPostalAddress
SUBTYPE OF (IfcAddress);
InternalLocation : OPTIONAL IfcLabel;
AddressLines : OPTIONAL LIST [1:?] OF IfcLabel;
PostalBox : OPTIONAL IfcLabel;
Town : OPTIONAL IfcLabel;
Region : OPTIONAL IfcLabel;
PostalCode : OPTIONAL IfcLabel;
Country : OPTIONAL IfcLabel;
WHERE
WR1 : EXISTS (InternalLocation) OR
EXISTS (AddressLines) OR
EXISTS (PostalBox) OR
EXISTS (PostalCode) OR
EXISTS (Town) OR
EXISTS (Region) OR
EXISTS (Country);
END_ENTITY;

ENTITY IfcPresentationLayerAssignment
SUPERTYPE OF (ONEOF
(IfcPresentationLayerWithStyle));
Name : IfcLabel;
Description : OPTIONAL IfcText;
AssignedItems : SET [1:?] OF IfcLayeredItem;
Identifier : OPTIONAL IfcIdentifier;
END_ENTITY;

ENTITY IfcPresentationLayerWithStyle
SUBTYPE OF (IfcPresentationLayerAssignment);
LayerOn : LOGICAL;
LayerFrozen : LOGICAL;
LayerBlocked : LOGICAL;
LayerStyles : SET [0:?] OF IfcPresentationStyleSelect;
END_ENTITY;

ENTITY IfcPresentationStyle
ABSTRACT SUPERTYPE OF (ONEOF
(IfcCurveStyle
,IfcSurfaceStyle));
Name : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcPresentationStyleAssignment;
Styles : SET [1:?] OF IfcPresentationStyleSelect;
END_ENTITY;

ENTITY IfcProduct
ABSTRACT SUPERTYPE OF (ONEOF
(IfcElement  
,IfcGrid
,IfcPort
,IfcSpatialStructureElement))
SUBTYPE OF (IfcObject);
ObjectPlacement : OPTIONAL IfcObjectPlacement;
Representation : OPTIONAL IfcProductRepresentation;
WHERE
WR1 : (EXISTS(Representation) AND EXISTS(ObjectPlacement))
OR (EXISTS(Representation) AND
(NOT('IFC2X3_CV_V2_0.IFCPRODUCTDEFINITIONSHAPE' IN TYPEOF(Representation))))
OR (NOT(EXISTS(Representation)));
END_ENTITY;

ENTITY IfcProductDefinitionShape
SUBTYPE OF (IfcProductRepresentation);
INVERSE
ShapeOfProduct : SET [1:1] OF IfcProduct FOR Representation;
WHERE
WR11 : SIZEOF(QUERY(temp <* Representations |
(NOT('IFC2X3_CV_V2_0.IFCSHAPEMODEL' IN TYPEOF(temp)))
)) = 0;
END_ENTITY;

ENTITY IfcProductRepresentation
ABSTRACT SUPERTYPE OF (ONEOF
(IfcMaterialDefinitionRepresentation
,IfcProductDefinitionShape));
Name : OPTIONAL IfcLabel;
Description : OPTIONAL IfcText;
Representations : LIST [1:?] OF IfcRepresentation;
END_ENTITY;

ENTITY IfcProfileDef
ABSTRACT SUPERTYPE OF (ONEOF
(IfcArbitraryClosedProfileDef
,IfcArbitraryOpenProfileDef
,IfcCompositeProfileDef
,IfcDerivedProfileDef
,IfcParameterizedProfileDef));
ProfileType : IfcProfileTypeEnum;
ProfileName : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcProject
SUBTYPE OF (IfcObject);
LongName : OPTIONAL IfcLabel;
Phase : OPTIONAL IfcLabel;
RepresentationContexts : SET [1:?] OF IfcRepresentationContext;
UnitsInContext : IfcUnitAssignment;
WHERE
WR31 : EXISTS(SELF\IfcRoot.Name);
WR32 : SIZEOF(QUERY(Temp <* RepresentationContexts |
'IFC2X3_CV_V2_0.IFCGEOMETRICREPRESENTATIONSUBCONTEXT' IN TYPEOF(Temp)
)) = 0;
WR33 : SIZEOF(SELF\IfcObjectDefinition.Decomposes) = 0;
END_ENTITY;

ENTITY IfcProperty
ABSTRACT SUPERTYPE OF (ONEOF
(IfcComplexProperty
,IfcSimpleProperty));
Name : IfcIdentifier;
Description : OPTIONAL IfcText;
INVERSE
PartOfComplex : SET [0:1] OF IfcComplexProperty FOR HasProperties;
END_ENTITY;

ENTITY IfcPropertyBoundedValue
SUBTYPE OF (IfcSimpleProperty);
UpperBoundValue : OPTIONAL IfcValue;
LowerBoundValue : OPTIONAL IfcValue;  
Unit : OPTIONAL IfcUnit;
WHERE
WR21 : NOT(EXISTS(UpperBoundValue)) OR NOT(EXISTS(LowerBoundValue)) OR
(TYPEOF(UpperBoundValue) = TYPEOF(LowerBoundValue));
WR22 : EXISTS(UpperBoundValue) OR EXISTS(LowerBoundValue);
END_ENTITY;

ENTITY IfcPropertyDefinition
ABSTRACT SUPERTYPE OF (ONEOF
(IfcPropertySetDefinition))
SUBTYPE OF (IfcRoot);
INVERSE
HasAssociations : SET [0:?] OF IfcRelAssociates FOR RelatedObjects;
END_ENTITY;

ENTITY IfcPropertyEnumeratedValue
SUBTYPE OF (IfcSimpleProperty);
EnumerationValues : LIST [1:?] OF IfcValue;
EnumerationReference : OPTIONAL IfcPropertyEnumeration;
WHERE
WR1 : NOT(EXISTS(EnumerationReference)) OR
(SIZEOF(QUERY(temp <* EnumerationValues |
temp IN EnumerationReference.EnumerationValues))
= SIZEOF(EnumerationValues));
END_ENTITY;

ENTITY IfcPropertyEnumeration;
Name : IfcLabel;
EnumerationValues : LIST [1:?] OF UNIQUE IfcValue;
Unit : OPTIONAL IfcUnit;
UNIQUE
UR1 : Name;
WHERE
WR01 : SIZEOF(QUERY(temp <* SELF.EnumerationValues |
NOT(TYPEOF(SELF.EnumerationValues[1]) = TYPEOF(temp))
)) = 0;
END_ENTITY;

ENTITY IfcPropertyListValue
SUBTYPE OF (IfcSimpleProperty);
ListValues : LIST [1:?] OF IfcValue;
Unit : OPTIONAL IfcUnit;
WHERE
WR31 : SIZEOF(QUERY(temp <* SELF.ListValues |
NOT(TYPEOF(SELF.ListValues[1]) = TYPEOF(temp))
)) = 0;
END_ENTITY;

ENTITY IfcPropertySet
SUBTYPE OF (IfcPropertySetDefinition);
HasProperties : SET [1:?] OF IfcProperty;
WHERE
WR31 : EXISTS(SELF\IfcRoot.Name);
WR32 : IfcUniquePropertyName(HasProperties);
END_ENTITY;

ENTITY IfcPropertySetDefinition
ABSTRACT SUPERTYPE OF (ONEOF
(IfcDoorLiningProperties
,IfcDoorPanelProperties
,IfcPropertySet
,IfcWindowLiningProperties
,IfcWindowPanelProperties))
SUBTYPE OF (IfcPropertyDefinition);
INVERSE
PropertyDefinitionOf : SET [0:1] OF IfcRelDefinesByProperties FOR RelatingPropertyDefinition;
DefinesType : SET [0:1] OF IfcTypeObject FOR HasPropertySets;
END_ENTITY;

ENTITY IfcPropertySingleValue
SUBTYPE OF (IfcSimpleProperty);  
NominalValue : OPTIONAL IfcValue;
Unit : OPTIONAL IfcUnit;
END_ENTITY;

ENTITY IfcPropertyTableValue
SUBTYPE OF (IfcSimpleProperty);
DefiningValues : LIST [1:?] OF UNIQUE IfcValue;
DefinedValues : LIST [1:?] OF IfcValue;
Expression : OPTIONAL IfcText;
DefiningUnit : OPTIONAL IfcUnit;
DefinedUnit : OPTIONAL IfcUnit;
WHERE
WR1 : SIZEOF(DefiningValues) = SIZEOF(DefinedValues);
WR2 : SIZEOF(QUERY(temp <* SELF.DefiningValues | TYPEOF(temp) <> TYPEOF(SELF.DefiningValues[1])))=0;
WR3 : SIZEOF(QUERY(temp <* SELF.DefinedValues | TYPEOF(temp) <> TYPEOF(SELF.DefinedValues[1])))=0;
END_ENTITY;

ENTITY IfcProtectiveDeviceType
SUBTYPE OF (IfcFlowControllerType);
PredefinedType : IfcProtectiveDeviceTypeEnum;
END_ENTITY;

ENTITY IfcPumpType
SUBTYPE OF (IfcFlowMovingDeviceType);
PredefinedType : IfcPumpTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcPumpTypeEnum.USERDEFINED) OR
((PredefinedType = IfcPumpTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcRailing
SUBTYPE OF (IfcBuildingElement);
PredefinedType : OPTIONAL IfcRailingTypeEnum;
WHERE
WR61 : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcRailingTypeEnum.USERDEFINED) OR
((PredefinedType = IfcRailingTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcRailingType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcRailingTypeEnum;
END_ENTITY;

ENTITY IfcRamp
SUBTYPE OF (IfcBuildingElement);
ShapeType : IfcRampTypeEnum;
WHERE
WR1 : (HIINDEX(SELF\IfcObjectDefinition.IsDecomposedBy) = 0) OR
((HIINDEX(SELF\IfcObjectDefinition.IsDecomposedBy) = 1) AND (NOT(EXISTS(SELF\IfcProduct.Representation))));
END_ENTITY;

ENTITY IfcRampFlight
SUBTYPE OF (IfcBuildingElement);
END_ENTITY;

ENTITY IfcRampFlightType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcRampFlightTypeEnum;
END_ENTITY;

ENTITY IfcRectangleHollowProfileDef
SUBTYPE OF (IfcRectangleProfileDef);
WallThickness : IfcPositiveLengthMeasure;
InnerFilletRadius : OPTIONAL IfcPositiveLengthMeasure;
OuterFilletRadius : OPTIONAL IfcPositiveLengthMeasure;
WHERE
WR31 : (WallThickness < (SELF\IfcRectangleProfileDef.XDim/2.)) AND
(WallThickness < (SELF\IfcRectangleProfileDef.YDim/2.));
WR32 : NOT(EXISTS(OuterFilletRadius)) OR
((OuterFilletRadius <= (SELF\IfcRectangleProfileDef.XDim/2.)) AND  
(OuterFilletRadius <= (SELF\IfcRectangleProfileDef.YDim/2.)));
WR33 : NOT(EXISTS(InnerFilletRadius)) OR
((InnerFilletRadius <= (SELF\IfcRectangleProfileDef.XDim/2. - WallThickness)) AND
(InnerFilletRadius <= (SELF\IfcRectangleProfileDef.YDim/2. - WallThickness)));
END_ENTITY;

ENTITY IfcRectangleProfileDef
SUPERTYPE OF (ONEOF
(IfcRectangleHollowProfileDef
,IfcRoundedRectangleProfileDef))
SUBTYPE OF (IfcParameterizedProfileDef);
XDim : IfcPositiveLengthMeasure;
YDim : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcReinforcingBar
SUBTYPE OF (IfcReinforcingElement);
NominalDiameter : IfcPositiveLengthMeasure;
CrossSectionArea : IfcAreaMeasure;
BarLength : OPTIONAL IfcPositiveLengthMeasure;
BarRole : IfcReinforcingBarRoleEnum;
BarSurface : OPTIONAL IfcReinforcingBarSurfaceEnum;
WHERE
WR1 : (BarRole <> IfcReinforcingBarRoleEnum.USERDEFINED) OR ((BarRole = IfcReinforcingBarRoleEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcReinforcingElement
ABSTRACT SUPERTYPE OF (ONEOF
(IfcReinforcingBar
,IfcReinforcingMesh
,IfcTendon
,IfcTendonAnchor))
SUBTYPE OF (IfcBuildingElementComponent);
SteelGrade : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcReinforcingMesh
SUBTYPE OF (IfcReinforcingElement);
MeshLength : OPTIONAL IfcPositiveLengthMeasure;
MeshWidth : OPTIONAL IfcPositiveLengthMeasure;
LongitudinalBarNominalDiameter : IfcPositiveLengthMeasure;
TransverseBarNominalDiameter : IfcPositiveLengthMeasure;
LongitudinalBarCrossSectionArea : IfcAreaMeasure;
TransverseBarCrossSectionArea : IfcAreaMeasure;
LongitudinalBarSpacing : IfcPositiveLengthMeasure;
TransverseBarSpacing : IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcRelAggregates
SUBTYPE OF (IfcRelDecomposes);
END_ENTITY;

ENTITY IfcRelAssigns
ABSTRACT SUPERTYPE OF (ONEOF
(IfcRelAssignsToGroup))
SUBTYPE OF (IfcRelationship);
RelatedObjects : SET [1:?] OF IfcObjectDefinition;
RelatedObjectsType : OPTIONAL IfcObjectTypeEnum;
WHERE
WR1 : IfcCorrectObjectAssignment(RelatedObjectsType, RelatedObjects);
END_ENTITY;

ENTITY IfcRelAssignsToGroup
SUBTYPE OF (IfcRelAssigns);
RelatingGroup : IfcGroup;
WHERE
WR1 : SIZEOF(QUERY(Temp <* SELF\IfcRelAssigns.RelatedObjects | RelatingGroup :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelAssociates  
ABSTRACT SUPERTYPE OF (ONEOF
(IfcRelAssociatesClassification
,IfcRelAssociatesMaterial))
SUBTYPE OF (IfcRelationship);
RelatedObjects : SET [1:?] OF IfcRoot;
WHERE
WR21 : SIZEOF(QUERY(temp <* RelatedObjects |
NOT(('IFC2X3_CV_V2_0.IFCOBJECTDEFINITION' IN TYPEOF(temp))
OR ('IFC2X3_CV_V2_0.IFCPROPERTYDEFINITION' IN TYPEOF(temp)))
)) = 0;
END_ENTITY;

ENTITY IfcRelAssociatesClassification
SUBTYPE OF (IfcRelAssociates);
RelatingClassification : IfcClassificationNotationSelect;
END_ENTITY;

ENTITY IfcRelAssociatesMaterial
SUBTYPE OF (IfcRelAssociates);
RelatingMaterial : IfcMaterialSelect;
WHERE
WR21 : SIZEOF(QUERY(temp <* SELF\IfcRelAssociates.RelatedObjects |
('IFC2X3_CV_V2_0.IFCFEATUREELEMENTSUBTRACTION' IN TYPEOF(temp))
OR ('IFC2X3_CV_V2_0.IFCVIRTUALELEMENT' IN TYPEOF(temp))
)) = 0;
WR22 : SIZEOF(QUERY(temp <* SELF\IfcRelAssociates.RelatedObjects |
(NOT('IFC2X3_CV_V2_0.IFCPRODUCT' IN TYPEOF(temp))
AND NOT('IFC2X3_CV_V2_0.IFCTYPEPRODUCT' IN TYPEOF(temp)))
)) = 0;
END_ENTITY;

ENTITY IfcRelConnects
ABSTRACT SUPERTYPE OF (ONEOF
(IfcRelConnectsElements
,IfcRelConnectsPortToElement
,IfcRelConnectsPorts
,IfcRelContainedInSpatialStructure
,IfcRelFillsElement
,IfcRelFlowControlElements
,IfcRelServicesBuildings
,IfcRelVoidsElement))
SUBTYPE OF (IfcRelationship);
END_ENTITY;

ENTITY IfcRelConnectsElements
SUPERTYPE OF (ONEOF
(IfcRelConnectsPathElements
,IfcRelConnectsWithRealizingElements))
SUBTYPE OF (IfcRelConnects);
ConnectionGeometry : OPTIONAL IfcConnectionGeometry;
RelatingElement : IfcElement;
RelatedElement : IfcElement;
WHERE
WR31 : RelatingElement :<>: RelatedElement;
END_ENTITY;

ENTITY IfcRelConnectsPathElements
SUBTYPE OF (IfcRelConnectsElements);
RelatingPriorities : LIST [0:?] OF INTEGER;
RelatedPriorities : LIST [0:?] OF INTEGER;
RelatedConnectionType : IfcConnectionTypeEnum;
RelatingConnectionType : IfcConnectionTypeEnum;
END_ENTITY;

ENTITY IfcRelConnectsPortToElement
SUBTYPE OF (IfcRelConnects);
RelatingPort : IfcPort;
RelatedElement : IfcElement;
END_ENTITY;

ENTITY IfcRelConnectsPorts  
SUBTYPE OF (IfcRelConnects);
RelatingPort : IfcPort;
RelatedPort : IfcPort;
RealizingElement : OPTIONAL IfcElement;
END_ENTITY;

ENTITY IfcRelConnectsWithRealizingElements
SUBTYPE OF (IfcRelConnectsElements);
RealizingElements : SET [1:?] OF IfcElement;
ConnectionType : OPTIONAL IfcLabel;
END_ENTITY;

ENTITY IfcRelContainedInSpatialStructure
SUBTYPE OF (IfcRelConnects);
RelatedElements : SET [1:?] OF IfcProduct;
RelatingStructure : IfcSpatialStructureElement;
WHERE
WR31 : SIZEOF(QUERY(temp <* RelatedElements | 'IFC2X3_CV_V2_0.IFCSPATIALSTRUCTUREELEMENT' IN TYPEOF(temp))) = 0;
END_ENTITY;

ENTITY IfcRelDecomposes
ABSTRACT SUPERTYPE OF (ONEOF
(IfcRelAggregates))
SUBTYPE OF (IfcRelationship);
RelatingObject : IfcObjectDefinition;
RelatedObjects : SET [1:?] OF IfcObjectDefinition;
WHERE
WR31 : SIZEOF(QUERY(Temp <* RelatedObjects | RelatingObject :=: Temp)) = 0;
END_ENTITY;

ENTITY IfcRelDefines
ABSTRACT SUPERTYPE OF (ONEOF
(IfcRelDefinesByProperties
,IfcRelDefinesByType))
SUBTYPE OF (IfcRelationship);
RelatedObjects : SET [1:?] OF IfcObject;
END_ENTITY;

ENTITY IfcRelDefinesByProperties
SUBTYPE OF (IfcRelDefines);
RelatingPropertyDefinition : IfcPropertySetDefinition;
END_ENTITY;

ENTITY IfcRelDefinesByType
SUBTYPE OF (IfcRelDefines);
RelatingType : IfcTypeObject;
END_ENTITY;

ENTITY IfcRelFillsElement
SUBTYPE OF (IfcRelConnects);
RelatingOpeningElement : IfcOpeningElement;
RelatedBuildingElement : IfcElement;
END_ENTITY;

ENTITY IfcRelFlowControlElements
SUBTYPE OF (IfcRelConnects);
RelatedControlElements : SET [1:?] OF IfcDistributionControlElement;
RelatingFlowElement : IfcDistributionFlowElement;
END_ENTITY;

ENTITY IfcRelServicesBuildings
SUBTYPE OF (IfcRelConnects);
RelatingSystem : IfcSystem;
RelatedBuildings : SET [1:?] OF IfcSpatialStructureElement;
END_ENTITY;

ENTITY IfcRelVoidsElement
SUBTYPE OF (IfcRelConnects);
RelatingBuildingElement : IfcElement;
RelatedOpeningElement : IfcFeatureElementSubtraction;
END_ENTITY;
  
ENTITY IfcRelationship
ABSTRACT SUPERTYPE OF (ONEOF
(IfcRelAssigns
,IfcRelAssociates
,IfcRelConnects
,IfcRelDecomposes
,IfcRelDefines))
SUBTYPE OF (IfcRoot);
END_ENTITY;

ENTITY IfcRepresentation
ABSTRACT SUPERTYPE OF (ONEOF
(IfcShapeModel
,IfcStyleModel));
ContextOfItems : IfcRepresentationContext;
RepresentationIdentifier : OPTIONAL IfcLabel;
RepresentationType : OPTIONAL IfcLabel;
Items : SET [1:?] OF IfcRepresentationItem;
INVERSE
RepresentationMap : SET [0:1] OF IfcRepresentationMap FOR MappedRepresentation;
LayerAssignments : SET [0:?] OF IfcPresentationLayerAssignment FOR AssignedItems;
OfProductRepresentation : SET [0:1] OF IfcProductRepresentation FOR Representations;
END_ENTITY;

ENTITY IfcRepresentationContext
ABSTRACT SUPERTYPE OF (ONEOF
(IfcGeometricRepresentationContext));
ContextIdentifier : OPTIONAL IfcLabel;
ContextType : OPTIONAL IfcLabel;
INVERSE
RepresentationsInContext : SET [0:?] OF IfcRepresentation FOR ContextOfItems;
END_ENTITY;

ENTITY IfcRepresentationItem
ABSTRACT SUPERTYPE OF (ONEOF
(IfcGeometricRepresentationItem
,IfcMappedItem
,IfcStyledItem
,IfcTopologicalRepresentationItem));
INVERSE
LayerAssignments : SET [0:?] OF IfcPresentationLayerAssignment FOR AssignedItems;
StyledByItem : SET [0:1] OF IfcStyledItem FOR Item;
END_ENTITY;

ENTITY IfcRepresentationMap;
MappingOrigin : IfcAxis2Placement;
MappedRepresentation : IfcRepresentation;
INVERSE
MapUsage : SET [0:?] OF IfcMappedItem FOR MappingSource;
END_ENTITY;

ENTITY IfcRevolvedAreaSolid
SUBTYPE OF (IfcSweptAreaSolid);
Axis : IfcAxis1Placement;
Angle : IfcPlaneAngleMeasure;
DERIVE
AxisLine : IfcLine := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcCurve() || IfcLine(Axis.Location,
IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(Axis.Z,1.0));
WHERE
WR31 : Axis.Location.Coordinates[3] = 0.0;
WR32 : Axis.Z.DirectionRatios[3] = 0.0;
END_ENTITY;

ENTITY IfcRoof
SUBTYPE OF (IfcBuildingElement);
ShapeType : IfcRoofTypeEnum;
WHERE
WR1 : (HIINDEX(SELF\IfcObjectDefinition.IsDecomposedBy) = 0) OR
((HIINDEX(SELF\IfcObjectDefinition.IsDecomposedBy) = 1) AND (NOT(EXISTS(SELF\IfcProduct.Representation))));  
END_ENTITY;

ENTITY IfcRoot
ABSTRACT SUPERTYPE OF (ONEOF
(IfcObjectDefinition
,IfcPropertyDefinition
,IfcRelationship));
GlobalId : IfcGloballyUniqueId;
OwnerHistory : IfcOwnerHistory;
Name : OPTIONAL IfcLabel;
Description : OPTIONAL IfcText;
UNIQUE
UR1 : GlobalId;
END_ENTITY;

ENTITY IfcRoundedRectangleProfileDef
SUBTYPE OF (IfcRectangleProfileDef);
RoundingRadius : IfcPositiveLengthMeasure;
WHERE
WR31 : ((RoundingRadius <= (SELF\IfcRectangleProfileDef.XDim/2.)) AND
(RoundingRadius <= (SELF\IfcRectangleProfileDef.YDim/2.)));
END_ENTITY;

ENTITY IfcSIUnit
SUBTYPE OF (IfcNamedUnit);
Prefix : OPTIONAL IfcSIPrefix;
Name : IfcSIUnitName;
DERIVE
SELF\IfcNamedUnit.Dimensions : IfcDimensionalExponents := IfcDimensionsForSiUnit (SELF.Name);
END_ENTITY;

ENTITY IfcSanitaryTerminalType
SUBTYPE OF (IfcFlowTerminalType);
PredefinedType : IfcSanitaryTerminalTypeEnum;
END_ENTITY;

ENTITY IfcSensorType
SUBTYPE OF (IfcDistributionControlElementType);
PredefinedType : IfcSensorTypeEnum;
END_ENTITY;

ENTITY IfcShapeModel
ABSTRACT SUPERTYPE OF (ONEOF
(IfcShapeRepresentation))
SUBTYPE OF (IfcRepresentation);
WHERE
WR11 : (SIZEOF(SELF\IfcRepresentation.OfProductRepresentation) = 1) XOR
(SIZEOF(SELF\IfcRepresentation.RepresentationMap) = 1);
END_ENTITY;

ENTITY IfcShapeRepresentation
SUBTYPE OF (IfcShapeModel);
WHERE
WR21 : 'IFC2X3_CV_V2_0.IFCGEOMETRICREPRESENTATIONCONTEXT'
IN TYPEOF(SELF\IfcRepresentation.ContextOfItems);
WR22 : SIZEOF(QUERY(temp <* Items |
('IFC2X3_CV_V2_0.IFCTOPOLOGICALREPRESENTATIONITEM' IN TYPEOF(temp))
AND (NOT(SIZEOF(
['IFC2X3_CV_V2_0.IFCVERTEXPOINT',
'IFC2X3_CV_V2_0.IFCEDGECURVE',
'IFC2X3_CV_V2_0.IFCFACESURFACE'] * TYPEOF(temp)) = 1))
)) = 0;
WR23 : EXISTS(SELF\IfcRepresentation.RepresentationType);
WR24 : IfcShapeRepresentationTypes(SELF\IfcRepresentation.RepresentationType, SELF\IfcRepresentation.Items);
END_ENTITY;

ENTITY IfcShellBasedSurfaceModel
SUBTYPE OF (IfcGeometricRepresentationItem);
SbsmBoundary : SET [1:?] OF IfcShell;
DERIVE
Dim : IfcDimensionCount := 3;  
END_ENTITY;

ENTITY IfcSimpleProperty
ABSTRACT SUPERTYPE OF (ONEOF
(IfcPropertyBoundedValue
,IfcPropertyEnumeratedValue
,IfcPropertyListValue
,IfcPropertySingleValue
,IfcPropertyTableValue))
SUBTYPE OF (IfcProperty);
END_ENTITY;

ENTITY IfcSite
SUBTYPE OF (IfcSpatialStructureElement);
RefLatitude : OPTIONAL IfcCompoundPlaneAngleMeasure;
RefLongitude : OPTIONAL IfcCompoundPlaneAngleMeasure;
RefElevation : OPTIONAL IfcLengthMeasure;
LandTitleNumber : OPTIONAL IfcLabel;
SiteAddress : OPTIONAL IfcPostalAddress;
END_ENTITY;

ENTITY IfcSlab
SUBTYPE OF (IfcBuildingElement);
PredefinedType : OPTIONAL IfcSlabTypeEnum;
WHERE
WR61 : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcSlabTypeEnum.USERDEFINED) OR
((PredefinedType = IfcSlabTypeEnum.USERDEFINED) AND EXISTS (SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcSlabType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcSlabTypeEnum;
END_ENTITY;

ENTITY IfcSolidModel
ABSTRACT SUPERTYPE OF (ONEOF
(IfcManifoldSolidBrep
,IfcSweptAreaSolid
,IfcSweptDiskSolid))
SUBTYPE OF (IfcGeometricRepresentationItem);
DERIVE
Dim : IfcDimensionCount := 3;
END_ENTITY;

ENTITY IfcSpace
SUBTYPE OF (IfcSpatialStructureElement);
InteriorOrExteriorSpace : IfcInternalOrExternalEnum;
ElevationWithFlooring : OPTIONAL IfcLengthMeasure;
END_ENTITY;

ENTITY IfcSpaceHeaterType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcSpaceHeaterTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcSpaceHeaterTypeEnum.USERDEFINED) OR
((PredefinedType = IfcSpaceHeaterTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcSpaceType
SUBTYPE OF (IfcSpatialStructureElementType);
PredefinedType : IfcSpaceTypeEnum;
END_ENTITY;

ENTITY IfcSpatialStructureElement
ABSTRACT SUPERTYPE OF (ONEOF
(IfcBuilding
,IfcBuildingStorey
,IfcSite
,IfcSpace))
SUBTYPE OF (IfcProduct);  
LongName : OPTIONAL IfcLabel;
CompositionType : IfcElementCompositionEnum;
INVERSE
ServicedBySystems : SET [0:?] OF IfcRelServicesBuildings FOR RelatedBuildings;
ContainsElements : SET [0:?] OF IfcRelContainedInSpatialStructure FOR RelatingStructure;
WHERE
WR41 : (HIINDEX(SELF\IfcObjectDefinition.Decomposes) = 1)
AND
('IFC2X3_CV_V2_0.IFCRELAGGREGATES' IN TYPEOF(SELF\IfcObjectDefinition.Decomposes[1]))
AND
(('IFC2X3_CV_V2_0.IFCPROJECT' IN TYPEOF (SELF\IfcObjectDefinition.Decomposes[1].RelatingObject)) OR
('IFC2X3_CV_V2_0.IFCSPATIALSTRUCTUREELEMENT' IN TYPEOF (SELF\IfcObjectDefinition.Decomposes[1].RelatingObject))
);
END_ENTITY;

ENTITY IfcSpatialStructureElementType
ABSTRACT SUPERTYPE OF (ONEOF
(IfcSpaceType))
SUBTYPE OF (IfcElementType);
END_ENTITY;

ENTITY IfcStackTerminalType
SUBTYPE OF (IfcFlowTerminalType);
PredefinedType : IfcStackTerminalTypeEnum;
END_ENTITY;

ENTITY IfcStair
SUBTYPE OF (IfcBuildingElement);
ShapeType : IfcStairTypeEnum;
WHERE
WR1 : (HIINDEX(SELF\IfcObjectDefinition.IsDecomposedBy) = 0) OR
((HIINDEX(SELF\IfcObjectDefinition.IsDecomposedBy) = 1) AND (NOT(EXISTS(SELF\IfcProduct.Representation))));
END_ENTITY;

ENTITY IfcStairFlight
SUBTYPE OF (IfcBuildingElement);
NumberOfRiser : OPTIONAL INTEGER;
NumberOfTreads : OPTIONAL INTEGER;
RiserHeight : OPTIONAL IfcPositiveLengthMeasure;
TreadLength : OPTIONAL IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcStairFlightType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcStairFlightTypeEnum;
END_ENTITY;

ENTITY IfcStyleModel
ABSTRACT SUPERTYPE OF (ONEOF
(IfcStyledRepresentation))
SUBTYPE OF (IfcRepresentation);
END_ENTITY;

ENTITY IfcStyledItem
SUBTYPE OF (IfcRepresentationItem);
Item : OPTIONAL IfcRepresentationItem;
Styles : SET [1:?] OF IfcPresentationStyleAssignment;
Name : OPTIONAL IfcLabel;
WHERE
WR11 : SIZEOF(Styles) = 1;
WR12 : NOT('IFC2X3_CV_V2_0.IFCSTYLEDITEM' IN TYPEOF(Item));
END_ENTITY;

ENTITY IfcStyledRepresentation
SUBTYPE OF (IfcStyleModel);
WHERE
WR21 : SIZEOF(QUERY(temp <* SELF\IfcRepresentation.Items |
(NOT('IFC2X3_CV_V2_0.IFCSTYLEDITEM' IN TYPEOF(temp)))
)) = 0;
END_ENTITY;
  
ENTITY IfcSurface
ABSTRACT SUPERTYPE OF (ONEOF
(IfcElementarySurface))
SUBTYPE OF (IfcGeometricRepresentationItem);
END_ENTITY;

ENTITY IfcSurfaceCurveSweptAreaSolid
SUBTYPE OF (IfcSweptAreaSolid);
Directrix : IfcCurve;
StartParam : IfcParameterValue;
EndParam : IfcParameterValue;
ReferenceSurface : IfcSurface;
END_ENTITY;

ENTITY IfcSurfaceStyle
SUBTYPE OF (IfcPresentationStyle);
Side : IfcSurfaceSide;
Styles : SET [1:5] OF IfcSurfaceStyleElementSelect;
WHERE
WR11 : SIZEOF(QUERY(Style <* SELF.Styles |
'IFC2X3_CV_V2_0.IFCSURFACESTYLESHADING' IN
TYPEOF(Style)
)) <= 1;
WR12 : SIZEOF(QUERY(Style <* SELF.Styles |
'IFC2X3_CV_V2_0.IFCSURFACESTYLELIGHTING' IN
TYPEOF(Style)
)) <= 1;
WR13 : SIZEOF(QUERY(Style <* SELF.Styles |
'IFC2X3_CV_V2_0.IFCSURFACESTYLEREFRACTION' IN
TYPEOF(Style)
)) <= 1;
WR14 : SIZEOF(QUERY(Style <* SELF.Styles |
'IFC2X3_CV_V2_0.IFCSURFACESTYLEWITHTEXTURES' IN
TYPEOF(Style)
)) <= 1;
WR15 : SIZEOF(QUERY(Style <* SELF.Styles |
'IFC2X3_CV_V2_0.IFCEXTERNALLYDEFINEDSURFACESTYLE' IN
TYPEOF(Style)
)) <= 1;
END_ENTITY;

ENTITY IfcSurfaceStyleRendering
SUBTYPE OF (IfcSurfaceStyleShading);
Transparency : OPTIONAL IfcNormalisedRatioMeasure;
DiffuseColour : OPTIONAL IfcColourOrFactor;
TransmissionColour : OPTIONAL IfcColourOrFactor;
DiffuseTransmissionColour : OPTIONAL IfcColourOrFactor;
ReflectionColour : OPTIONAL IfcColourOrFactor;
SpecularColour : OPTIONAL IfcColourOrFactor;
SpecularHighlight : OPTIONAL IfcSpecularHighlightSelect;
ReflectanceMethod : IfcReflectanceMethodEnum;
END_ENTITY;

ENTITY IfcSurfaceStyleShading
SUPERTYPE OF (ONEOF
(IfcSurfaceStyleRendering));
SurfaceColour : IfcColourRgb;
END_ENTITY;

ENTITY IfcSweptAreaSolid
ABSTRACT SUPERTYPE OF (ONEOF
(IfcExtrudedAreaSolid
,IfcRevolvedAreaSolid
,IfcSurfaceCurveSweptAreaSolid))
SUBTYPE OF (IfcSolidModel);
SweptArea : IfcProfileDef;
Position : IfcAxis2Placement3D;
WHERE
WR22 : SweptArea.ProfileType = IfcProfileTypeEnum.Area;
END_ENTITY;
  
ENTITY IfcSweptDiskSolid
SUBTYPE OF (IfcSolidModel);
Directrix : IfcCurve;
Radius : IfcPositiveLengthMeasure;
InnerRadius : OPTIONAL IfcPositiveLengthMeasure;
StartParam : IfcParameterValue;
EndParam : IfcParameterValue;
WHERE
WR1 : Directrix.Dim = 3;
WR2 : (NOT EXISTS(InnerRadius)) OR (Radius > InnerRadius);
END_ENTITY;

ENTITY IfcSwitchingDeviceType
SUBTYPE OF (IfcFlowControllerType);
PredefinedType : IfcSwitchingDeviceTypeEnum;
END_ENTITY;

ENTITY IfcSystem
SUPERTYPE OF (ONEOF
(IfcElectricalCircuit))
SUBTYPE OF (IfcGroup);
INVERSE
ServicesBuildings : SET [0:1] OF IfcRelServicesBuildings FOR RelatingSystem;
END_ENTITY;

ENTITY IfcTShapeProfileDef
SUBTYPE OF (IfcParameterizedProfileDef);
Depth : IfcPositiveLengthMeasure;
FlangeWidth : IfcPositiveLengthMeasure;
WebThickness : IfcPositiveLengthMeasure;
FlangeThickness : IfcPositiveLengthMeasure;
FilletRadius : OPTIONAL IfcPositiveLengthMeasure;
FlangeEdgeRadius : OPTIONAL IfcPositiveLengthMeasure;
WebEdgeRadius : OPTIONAL IfcPositiveLengthMeasure;
WebSlope : OPTIONAL IfcPlaneAngleMeasure;
FlangeSlope : OPTIONAL IfcPlaneAngleMeasure;
CentreOfGravityInY : OPTIONAL IfcPositiveLengthMeasure;
WHERE
WR1 : FlangeThickness < Depth;
WR2 : WebThickness < FlangeWidth;
END_ENTITY;

ENTITY IfcTankType
SUBTYPE OF (IfcFlowStorageDeviceType);
PredefinedType : IfcTankTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcTankTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTankTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcTelecomAddress
SUBTYPE OF (IfcAddress);
TelephoneNumbers : OPTIONAL LIST [1:?] OF IfcLabel;
FacsimileNumbers : OPTIONAL LIST [1:?] OF IfcLabel;
PagerNumber : OPTIONAL IfcLabel;
ElectronicMailAddresses : OPTIONAL LIST [1:?] OF IfcLabel;
WWWHomePageURL : OPTIONAL IfcLabel;
WHERE
WR1 : EXISTS (TelephoneNumbers) OR
EXISTS (PagerNumber) OR
EXISTS (FacsimileNumbers) OR
EXISTS (ElectronicMailAddresses) OR
EXISTS (WWWHomePageURL);
END_ENTITY;

ENTITY IfcTendon
SUBTYPE OF (IfcReinforcingElement);
PredefinedType : IfcTendonTypeEnum;
NominalDiameter : IfcPositiveLengthMeasure;
CrossSectionArea : IfcAreaMeasure;
TensionForce : OPTIONAL IfcForceMeasure;  
PreStress : OPTIONAL IfcPressureMeasure;
FrictionCoefficient : OPTIONAL IfcNormalisedRatioMeasure;
AnchorageSlip : OPTIONAL IfcPositiveLengthMeasure;
MinCurvatureRadius : OPTIONAL IfcPositiveLengthMeasure;
WHERE
WR1 : (PredefinedType <> IfcTendonTypeEnum.USERDEFINED) OR ((PredefinedType = IfcTendonTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcTendonAnchor
SUBTYPE OF (IfcReinforcingElement);
END_ENTITY;

ENTITY IfcTopologicalRepresentationItem
ABSTRACT SUPERTYPE OF (ONEOF
(IfcConnectedFaceSet
,IfcFace
,IfcFaceBound
,IfcLoop))
SUBTYPE OF (IfcRepresentationItem);
END_ENTITY;

ENTITY IfcTransformerType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcTransformerTypeEnum;
END_ENTITY;

ENTITY IfcTransportElement
SUBTYPE OF (IfcElement);
OperationType : OPTIONAL IfcTransportElementTypeEnum;
CapacityByWeight : OPTIONAL IfcMassMeasure;
CapacityByNumber : OPTIONAL IfcCountMeasure;
END_ENTITY;

ENTITY IfcTransportElementType
SUBTYPE OF (IfcElementType);
PredefinedType : IfcTransportElementTypeEnum;
END_ENTITY;

ENTITY IfcTrimmedCurve
SUBTYPE OF (IfcBoundedCurve);
BasisCurve : IfcCurve;
Trim1 : SET [1:2] OF IfcTrimmingSelect;
Trim2 : SET [1:2] OF IfcTrimmingSelect;
SenseAgreement : BOOLEAN;
MasterRepresentation : IfcTrimmingPreference;
WHERE
WR41 : (HIINDEX(Trim1) = 1) OR (TYPEOF(Trim1[1]) <> TYPEOF(Trim1[2]));
WR42 : (HIINDEX(Trim2) = 1) OR (TYPEOF(Trim2[1]) <> TYPEOF(Trim2[2]));
WR43 : NOT('IFC2X3_CV_V2_0.IFCBOUNDEDCURVE' IN TYPEOF(BasisCurve));
END_ENTITY;

ENTITY IfcTubeBundleType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcTubeBundleTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcTubeBundleTypeEnum.USERDEFINED) OR
((PredefinedType = IfcTubeBundleTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcTypeObject
ABSTRACT SUPERTYPE OF (ONEOF
(IfcTypeProduct))
SUBTYPE OF (IfcObjectDefinition);
ApplicableOccurrence : OPTIONAL IfcLabel;
HasPropertySets : OPTIONAL SET [1:?] OF IfcPropertySetDefinition;
INVERSE
ObjectTypeOf : SET [0:1] OF IfcRelDefinesByType FOR RelatingType;
WHERE
WR1 : EXISTS(SELF\IfcRoot.Name);
END_ENTITY;
  
ENTITY IfcTypeProduct
ABSTRACT SUPERTYPE OF (ONEOF
(IfcDoorStyle
,IfcElementType
,IfcWindowStyle))
SUBTYPE OF (IfcTypeObject);
RepresentationMaps : OPTIONAL LIST [1:?] OF UNIQUE IfcRepresentationMap;
Tag : OPTIONAL IfcLabel;
WHERE
WR41 : NOT(EXISTS(SELF\IfcTypeObject.ObjectTypeOf[1])) OR
(SIZEOF(QUERY(temp <* SELF\IfcTypeObject.ObjectTypeOf[1].RelatedObjects |
NOT('IFC2X3_CV_V2_0.IFCPRODUCT' IN TYPEOF(temp)))
) = 0);
END_ENTITY;

ENTITY IfcUShapeProfileDef
SUBTYPE OF (IfcParameterizedProfileDef);
Depth : IfcPositiveLengthMeasure;
FlangeWidth : IfcPositiveLengthMeasure;
WebThickness : IfcPositiveLengthMeasure;
FlangeThickness : IfcPositiveLengthMeasure;
FilletRadius : OPTIONAL IfcPositiveLengthMeasure;
EdgeRadius : OPTIONAL IfcPositiveLengthMeasure;
FlangeSlope : OPTIONAL IfcPlaneAngleMeasure;
CentreOfGravityInX : OPTIONAL IfcPositiveLengthMeasure;
WHERE
WR21 : FlangeThickness < (Depth / 2.);
WR22 : WebThickness < FlangeWidth;
END_ENTITY;

ENTITY IfcUnitAssignment;
Units : SET [1:?] OF IfcUnit;
WHERE
WR01 : IfcCorrectUnitAssignment(Units);
END_ENTITY;

ENTITY IfcUnitaryEquipmentType
SUBTYPE OF (IfcEnergyConversionDeviceType);
PredefinedType : IfcUnitaryEquipmentTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcUnitaryEquipmentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcUnitaryEquipmentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcValveType
SUBTYPE OF (IfcFlowControllerType);
PredefinedType : IfcValveTypeEnum;
WHERE
WR1 : (PredefinedType <> IfcValveTypeEnum.USERDEFINED) OR
((PredefinedType = IfcValveTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcVector
SUBTYPE OF (IfcGeometricRepresentationItem);
Orientation : IfcDirection;
Magnitude : IfcLengthMeasure;
DERIVE
Dim : IfcDimensionCount := Orientation.Dim;
WHERE
WR1 : Magnitude >= 0.0;
END_ENTITY;

ENTITY IfcWall
SUPERTYPE OF (ONEOF
(IfcWallStandardCase))
SUBTYPE OF (IfcBuildingElement);
WHERE
WR1 : SIZEOF (QUERY(temp <* SELF\IfcObjectDefinition.HasAssociations |
'IFC2X3_CV_V2_0.IFCRELASSOCIATESMATERIAL' IN TYPEOF(temp)
)) <= 1;  
END_ENTITY;

ENTITY IfcWallStandardCase
SUBTYPE OF (IfcWall);
WHERE
WR1 : SIZEOF (QUERY(temp <* USEDIN(SELF, 'IFC2X3_CV_V2_0.IFCRELASSOCIATES.RELATEDOBJECTS') |
('IFC2X3_CV_V2_0.IFCRELASSOCIATESMATERIAL' IN TYPEOF(temp)) AND
('IFC2X3_CV_V2_0.IFCMATERIALLAYERSETUSAGE' IN TYPEOF(temp.RelatingMaterial))
)) = 1;
END_ENTITY;

ENTITY IfcWallType
SUBTYPE OF (IfcBuildingElementType);
PredefinedType : IfcWallTypeEnum;
END_ENTITY;

ENTITY IfcWasteTerminalType
SUBTYPE OF (IfcFlowTerminalType);
PredefinedType : IfcWasteTerminalTypeEnum;
END_ENTITY;

ENTITY IfcWindow
SUBTYPE OF (IfcBuildingElement);
OverallHeight : OPTIONAL IfcPositiveLengthMeasure;
OverallWidth : OPTIONAL IfcPositiveLengthMeasure;
END_ENTITY;

ENTITY IfcWindowLiningProperties
SUBTYPE OF (IfcPropertySetDefinition);
LiningDepth : OPTIONAL IfcPositiveLengthMeasure;
LiningThickness : OPTIONAL IfcPositiveLengthMeasure;
TransomThickness : OPTIONAL IfcPositiveLengthMeasure;
MullionThickness : OPTIONAL IfcPositiveLengthMeasure;
FirstTransomOffset : OPTIONAL IfcNormalisedRatioMeasure;
SecondTransomOffset : OPTIONAL IfcNormalisedRatioMeasure;
FirstMullionOffset : OPTIONAL IfcNormalisedRatioMeasure;
SecondMullionOffset : OPTIONAL IfcNormalisedRatioMeasure;
ShapeAspectStyle : OPTIONAL IfcStrippedOptional;
WHERE
WR31 : NOT(NOT(EXISTS(LiningDepth)) AND EXISTS(LiningThickness));
WR32 : NOT(NOT(EXISTS(FirstTransomOffset)) AND EXISTS(SecondTransomOffset));
WR33 : NOT(NOT(EXISTS(FirstMullionOffset)) AND EXISTS(SecondMullionOffset));
WR34 : EXISTS(SELF\IfcPropertySetDefinition.DefinesType[1]) AND
('IFC2X3_CV_V2_0.IFCWINDOWSTYLE' IN TYPEOF(SELF\IfcPropertySetDefinition.DefinesType[1]));
END_ENTITY;

ENTITY IfcWindowPanelProperties
SUBTYPE OF (IfcPropertySetDefinition);
OperationType : IfcWindowPanelOperationEnum;
PanelPosition : IfcWindowPanelPositionEnum;
FrameDepth : OPTIONAL IfcPositiveLengthMeasure;
FrameThickness : OPTIONAL IfcPositiveLengthMeasure;
ShapeAspectStyle : OPTIONAL IfcStrippedOptional;
END_ENTITY;

ENTITY IfcWindowStyle
SUBTYPE OF (IfcTypeProduct);
ConstructionType : IfcWindowStyleConstructionEnum;
OperationType : IfcWindowStyleOperationEnum;
ParameterTakesPrecedence : BOOLEAN;
Sizeable : BOOLEAN;
END_ENTITY;

ENTITY IfcZShapeProfileDef
SUBTYPE OF (IfcParameterizedProfileDef);
Depth : IfcPositiveLengthMeasure;
FlangeWidth : IfcPositiveLengthMeasure;
WebThickness : IfcPositiveLengthMeasure;
FlangeThickness : IfcPositiveLengthMeasure;
FilletRadius : OPTIONAL IfcPositiveLengthMeasure;
EdgeRadius : OPTIONAL IfcPositiveLengthMeasure;  
WHERE
WR21 : FlangeThickness < (Depth / 2.);
END_ENTITY;

ENTITY IfcZone
SUBTYPE OF (IfcGroup);
WHERE
WR1 : SIZEOF (QUERY (temp <* SELF\IfcGroup.IsGroupedBy.RelatedObjects | NOT(('IFC2X3_CV_V2_0.IFCZONE' IN TYPEOF(temp)) OR ('IFC2X3_CV_V2_0.IFCSPACE' IN TYPEOF(temp))) )) = 0;
END_ENTITY;

FUNCTION IfcBaseAxis
(Dim : INTEGER;
Axis1, Axis2, Axis3 : IfcDirection)
: LIST [2:3] OF IfcDirection;
LOCAL
U : LIST [2:3] OF IfcDirection;
Factor : REAL;
D1, D2 : IfcDirection;
END_LOCAL;
IF (Dim = 3) THEN
D1 := NVL(IfcNormalise(Axis3), IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0,0.0,1.0]));
D2 := IfcFirstProjAxis(D1, Axis1);
U := [D2, IfcSecondProjAxis(D1, D2, Axis2), D1];
ELSE
IF EXISTS(Axis1) THEN
D1 := IfcNormalise(Axis1);
U := [D1, IfcOrthogonalComplement(D1)];
IF EXISTS(Axis2) THEN
Factor := IfcDotProduct(Axis2, U[2]);
IF (Factor < 0.0) THEN
U[2].DirectionRatios[1] := -U[2].DirectionRatios[1];
U[2].DirectionRatios[2] := -U[2].DirectionRatios[2];
END_IF;
END_IF;
ELSE
IF EXISTS(Axis2) THEN
D1 := IfcNormalise(Axis2);
U := [IfcOrthogonalComplement(D1), D1];
U[1].DirectionRatios[1] := -U[1].DirectionRatios[1];
U[1].DirectionRatios[2] := -U[1].DirectionRatios[2];
ELSE
U := [IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([1.0, 0.0]),
IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0, 1.0])];
END_IF;
END_IF;
END_IF;
RETURN(U);
END_FUNCTION;

FUNCTION IfcBuild2Axes
(RefDirection : IfcDirection)
: LIST [2:2] OF IfcDirection;
LOCAL
D : IfcDirection := NVL(IfcNormalise(RefDirection),
IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([1.0,0.0]));
END_LOCAL;
RETURN([D, IfcOrthogonalComplement(D)]);
END_FUNCTION;

FUNCTION IfcBuildAxes
(Axis, RefDirection : IfcDirection)
: LIST [3:3] OF IfcDirection;
LOCAL
D1, D2 : IfcDirection;
END_LOCAL;
D1 := NVL(IfcNormalise(Axis), IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0,0.0,1.0]));  
D2 := IfcFirstProjAxis(D1, RefDirection);
RETURN ([D2, IfcNormalise(IfcCrossProduct(D1,D2))\IfcVector.Orientation, D1]);
END_FUNCTION;

FUNCTION IfcCorrectDimensions
(m : IfcUnitEnum; Dim : IfcDimensionalExponents)
: LOGICAL;
CASE m OF
LENGTHUNIT : IF
Dim = (IfcDimensionalExponents (1, 0, 0, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
MASSUNIT : IF
Dim = (IfcDimensionalExponents (0, 1, 0, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
TIMEUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, 1, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
ELECTRICCURRENTUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, 0, 1, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
THERMODYNAMICTEMPERATUREUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, 0, 0, 1, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
AMOUNTOFSUBSTANCEUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, 0, 0, 0, 1, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
LUMINOUSINTENSITYUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, 0, 0, 0, 0, 1))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
PLANEANGLEUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, 0, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
SOLIDANGLEUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, 0, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
AREAUNIT : IF
Dim = (IfcDimensionalExponents (2, 0, 0, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
VOLUMEUNIT : IF
Dim = (IfcDimensionalExponents (3, 0, 0, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
ABSORBEDDOSEUNIT : IF
Dim = (IfcDimensionalExponents (2, 0, -2, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
RADIOACTIVITYUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, -1, 0, 0, 0, 0))  
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
ELECTRICCAPACITANCEUNIT : IF
Dim = (IfcDimensionalExponents (-2, 1, 4, 1, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
DOSEEQUIVALENTUNIT : IF
Dim = (IfcDimensionalExponents (2, 0, -2, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
ELECTRICCHARGEUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, 1, 1, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
ELECTRICCONDUCTANCEUNIT : IF
Dim = (IfcDimensionalExponents (-2, -1, 3, 2, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
ELECTRICVOLTAGEUNIT : IF
Dim = (IfcDimensionalExponents (2, 1, -3, -1, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
ELECTRICRESISTANCEUNIT : IF
Dim = (IfcDimensionalExponents (2, 1, -3, -2, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
ENERGYUNIT : IF
Dim = (IfcDimensionalExponents (2, 1, -2, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
FORCEUNIT : IF
Dim = (IfcDimensionalExponents (1, 1, -2, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
FREQUENCYUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, -1, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
INDUCTANCEUNIT : IF
Dim = (IfcDimensionalExponents (2, 1, -2, -2, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
ILLUMINANCEUNIT : IF
Dim = (IfcDimensionalExponents (-2, 0, 0, 0, 0, 0, 1))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
LUMINOUSFLUXUNIT : IF
Dim = (IfcDimensionalExponents (0, 0, 0, 0, 0, 0, 1))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
MAGNETICFLUXUNIT : IF
Dim = (IfcDimensionalExponents (2, 1, -2, -1, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
MAGNETICFLUXDENSITYUNIT : IF
Dim = (IfcDimensionalExponents (0, 1, -2, -1, 0, 0, 0))
THEN RETURN(TRUE);  
ELSE RETURN(FALSE);
END_IF;
POWERUNIT : IF
Dim = (IfcDimensionalExponents (2, 1, -3, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
PRESSUREUNIT : IF
Dim = (IfcDimensionalExponents (-1, 1, -2, 0, 0, 0, 0))
THEN RETURN(TRUE);
ELSE RETURN(FALSE);
END_IF;
OTHERWISE :
RETURN (UNKNOWN);
END_CASE;
END_FUNCTION;

FUNCTION IfcCorrectLocalPlacement
(AxisPlacement:IfcAxis2Placement;
RelPlacement : IfcObjectPlacement)
: LOGICAL;
IF (EXISTS(RelPlacement)) THEN
IF ('IFC2X3_CV_V2_0.IFCGRIDPLACEMENT' IN TYPEOF(RelPlacement)) THEN
RETURN(?);
END_IF;
IF ('IFC2X3_CV_V2_0.IFCLOCALPLACEMENT' IN TYPEOF(RelPlacement)) THEN
IF ('IFC2X3_CV_V2_0.IFCAXIS2PLACEMENT2D' IN TYPEOF(AxisPlacement)) THEN
RETURN(TRUE);
END_IF;
IF ('IFC2X3_CV_V2_0.IFCAXIS2PLACEMENT3D' IN TYPEOF(AxisPlacement)) THEN
IF (RelPlacement.RelativePlacement.Dim = 3) THEN
RETURN(TRUE);
ELSE
RETURN(FALSE);
END_IF;
END_IF;
END_IF;
ELSE
RETURN(TRUE);
END_IF;
RETURN(?);
END_FUNCTION;

FUNCTION IfcCorrectObjectAssignment
(Constraint: IfcObjectTypeEnum; Objects : SET[1:?] OF IfcObjectDefinition)
: LOGICAL;
LOCAL
Count : INTEGER := 0;
END_LOCAL;
IF NOT(EXISTS(Constraint)) THEN
RETURN(TRUE);
END_IF;
CASE Constraint OF
IfcObjectTypeEnum.NOTDEFINED : RETURN(TRUE);
IfcObjectTypeEnum.PRODUCT :
BEGIN
Count := SIZEOF(QUERY(temp <* Objects | NOT('IFC2X3_CV_V2_0.IFCPRODUCT' IN TYPEOF(temp))));
RETURN(Count = 0);
END;
IfcObjectTypeEnum.PROCESS :
BEGIN
Count := SIZEOF(QUERY(temp <* Objects | NOT('IFC2X3_CV_V2_0.IFCPROCESS' IN TYPEOF(temp))));
RETURN(Count = 0);
END;
IfcObjectTypeEnum.CONTROL :
BEGIN  
Count := SIZEOF(QUERY(temp <* Objects | NOT('IFC2X3_CV_V2_0.IFCCONTROL' IN TYPEOF(temp))));
RETURN(Count = 0);
END;
IfcObjectTypeEnum.RESOURCE :
BEGIN
Count := SIZEOF(QUERY(temp <* Objects | NOT('IFC2X3_CV_V2_0.IFCRESOURCE' IN TYPEOF(temp))));
RETURN(Count = 0);
END;
IfcObjectTypeEnum.ACTOR :
BEGIN
Count := SIZEOF(QUERY(temp <* Objects | NOT('IFC2X3_CV_V2_0.IFCACTOR' IN TYPEOF(temp))));
RETURN(Count = 0);
END;
IfcObjectTypeEnum.GROUP :
BEGIN
Count := SIZEOF(QUERY(temp <* Objects | NOT('IFC2X3_CV_V2_0.IFCGROUP' IN TYPEOF(temp))));
RETURN(Count = 0);
END;
IfcObjectTypeEnum.PROJECT :
BEGIN
Count := SIZEOF(QUERY(temp <* Objects | NOT('IFC2X3_CV_V2_0.IFCPROJECT' IN TYPEOF(temp))));
RETURN(Count = 0);
END;
OTHERWISE : RETURN(?);
END_CASE;
END_FUNCTION;







FUNCTION IfcCorrectUnitAssignment
(Units : SET [1:?] OF IfcUnit)
: LOGICAL;
LOCAL
NamedUnitNumber : INTEGER := 0;
DerivedUnitNumber : INTEGER := 0;
MonetaryUnitNumber : INTEGER := 0;
NamedUnitNames : SET OF IfcUnitEnum := [];
DerivedUnitNames : SET OF IfcDerivedUnitEnum := [];
END_LOCAL;
NamedUnitNumber := SIZEOF(QUERY(temp <* Units | ('IFC2X3_CV_V2_0.IFCNAMEDUNIT' IN TYPEOF(temp)) AND NOT(temp\IfcNamedUnit.UnitType = IfcUnitEnum.USERDEFINED)));
DerivedUnitNumber := SIZEOF(QUERY(temp <* Units | ('IFC2X3_CV_V2_0.IFCDERIVEDUNIT' IN TYPEOF(temp)) AND NOT(temp\IfcDerivedUnit.UnitType = IfcDerivedUnitEnum.USERDEFINED)));
MonetaryUnitNumber := SIZEOF(QUERY(temp <* Units | 'IFC2X3_CV_V2_0.IFCMONETARYUNIT' IN TYPEOF(temp)));
REPEAT i := 1 TO SIZEOF(Units);
IF (('IFC2X3_CV_V2_0.IFCNAMEDUNIT' IN TYPEOF(Units[i])) AND NOT(Units[i]\IfcNamedUnit.UnitType = IfcUnitEnum.USERDEFINED)) THEN
NamedUnitNames := NamedUnitNames + Units[i]\IfcNamedUnit.UnitType;
END_IF;
IF (('IFC2X3_CV_V2_0.IFCDERIVEDUNIT' IN TYPEOF(Units[i])) AND NOT(Units[i]\IfcDerivedUnit.UnitType = IfcDerivedUnitEnum.USERDEFINED)) THEN
DerivedUnitNames := DerivedUnitNames + Units[i]\IfcDerivedUnit.UnitType;
END_IF;
END_REPEAT;
RETURN((SIZEOF(NamedUnitNames) = NamedUnitNumber) AND (SIZEOF(DerivedUnitNames) = DerivedUnitNumber) AND (MonetaryUnitNumber <= 1));
END_FUNCTION;

FUNCTION IfcCrossProduct
(Arg1, Arg2 : IfcDirection)
: IfcVector;
LOCAL
Mag : REAL;
Res : IfcDirection;
V1,V2 : LIST[3:3] OF REAL;
Result : IfcVector;
END_LOCAL;
IF (NOT EXISTS (Arg1) OR (Arg1.Dim = 2)) OR (NOT EXISTS (Arg2) OR (Arg2.Dim = 2)) THEN  
RETURN(?);
ELSE
BEGIN
V1 := IfcNormalise(Arg1).DirectionRatios;
V2 := IfcNormalise(Arg2).DirectionRatios;
Res := IfcRepresentationItem() || IfcGeometricRepresentationItem ()
|| IfcDirection([(V1[2]*V2[3] - V1[3]*V2[2]), (V1[3]*V2[1] - V1[1]*V2[3]), (V1[1]*V2[2] - V1[2]*V2[1])]);
Mag := 0.0;
REPEAT i := 1 TO 3;
Mag := Mag + Res.DirectionRatios[i]*Res.DirectionRatios[i];
END_REPEAT;
IF (Mag > 0.0) THEN
Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(Res, SQRT(Mag));
ELSE
Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(Arg1, 0.0);
END_IF;
RETURN(Result);
END;
END_IF;
END_FUNCTION;

FUNCTION IfcCurveDim
(Curve : IfcCurve)
: IfcDimensionCount;
IF ('IFC2X3_CV_V2_0.IFCLINE' IN TYPEOF(Curve))
THEN RETURN(Curve\IfcLine.Pnt.Dim);
END_IF;
IF ('IFC2X3_CV_V2_0.IFCCONIC' IN TYPEOF(Curve))
THEN RETURN(Curve\IfcConic.Position.Dim);
END_IF;
IF ('IFC2X3_CV_V2_0.IFCPOLYLINE' IN TYPEOF(Curve))
THEN RETURN(Curve\IfcPolyline.Points[1].Dim);
END_IF;
IF ('IFC2X3_CV_V2_0.IFCTRIMMEDCURVE' IN TYPEOF(Curve))
THEN RETURN(IfcCurveDim(Curve\IfcTrimmedCurve.BasisCurve));
END_IF;
IF ('IFC2X3_CV_V2_0.IFCCOMPOSITECURVE' IN TYPEOF(Curve))
THEN RETURN(Curve\IfcCompositeCurve.Segments[1].Dim);
END_IF;
RETURN (?);
END_FUNCTION;

FUNCTION IfcDeriveDimensionalExponents
(UnitElements : SET [1:?] OF IfcDerivedUnitElement)
: IfcDimensionalExponents;
LOCAL
Result : IfcDimensionalExponents :=
IfcDimensionalExponents(0, 0, 0, 0, 0, 0, 0);
END_LOCAL;
REPEAT i := LOINDEX(UnitElements) TO HIINDEX(UnitElements);
Result.LengthExponent := Result.LengthExponent +
(UnitElements[i].Exponent *
UnitElements[i].Unit.Dimensions.LengthExponent);
Result.MassExponent := Result.MassExponent +
(UnitElements[i].Exponent *
UnitElements[i].Unit.Dimensions.MassExponent);
Result.TimeExponent := Result.TimeExponent +
(UnitElements[i].Exponent *
UnitElements[i].Unit.Dimensions.TimeExponent);
Result.ElectricCurrentExponent := Result.ElectricCurrentExponent +
(UnitElements[i].Exponent *
UnitElements[i].Unit.Dimensions.ElectricCurrentExponent);
Result.ThermodynamicTemperatureExponent := Result.ThermodynamicTemperatureExponent +
(UnitElements[i].Exponent *
UnitElements[i].Unit.Dimensions.ThermodynamicTemperatureExponent);
Result.AmountOfSubstanceExponent := Result.AmountOfSubstanceExponent +
(UnitElements[i].Exponent *
UnitElements[i].Unit.Dimensions.AmountOfSubstanceExponent);
Result.LuminousIntensityExponent := Result.LuminousIntensityExponent +  
(UnitElements[i].Exponent *
UnitElements[i].Unit.Dimensions.LuminousIntensityExponent);
END_REPEAT;
RETURN (Result);
END_FUNCTION;

FUNCTION IfcDimensionsForSiUnit
(n : IfcSiUnitName )
: IfcDimensionalExponents;
CASE n OF
METRE : RETURN (IfcDimensionalExponents
(1, 0, 0, 0, 0, 0, 0));
SQUARE_METRE : RETURN (IfcDimensionalExponents
(2, 0, 0, 0, 0, 0, 0));
CUBIC_METRE : RETURN (IfcDimensionalExponents
(3, 0, 0, 0, 0, 0, 0));
GRAM : RETURN (IfcDimensionalExponents
(0, 1, 0, 0, 0, 0, 0));
SECOND : RETURN (IfcDimensionalExponents
(0, 0, 1, 0, 0, 0, 0));
AMPERE : RETURN (IfcDimensionalExponents
(0, 0, 0, 1, 0, 0, 0));
KELVIN : RETURN (IfcDimensionalExponents
(0, 0, 0, 0, 1, 0, 0));
MOLE : RETURN (IfcDimensionalExponents
(0, 0, 0, 0, 0, 1, 0));
CANDELA : RETURN (IfcDimensionalExponents
(0, 0, 0, 0, 0, 0, 1));
RADIAN : RETURN (IfcDimensionalExponents
(0, 0, 0, 0, 0, 0, 0));
STERADIAN : RETURN (IfcDimensionalExponents
(0, 0, 0, 0, 0, 0, 0));
HERTZ : RETURN (IfcDimensionalExponents
(0, 0, -1, 0, 0, 0, 0));
NEWTON : RETURN (IfcDimensionalExponents
(1, 1, -2, 0, 0, 0, 0));
PASCAL : RETURN (IfcDimensionalExponents
(-1, 1, -2, 0, 0, 0, 0));
JOULE : RETURN (IfcDimensionalExponents
(2, 1, -2, 0, 0, 0, 0));
WATT : RETURN (IfcDimensionalExponents
(2, 1, -3, 0, 0, 0, 0));
COULOMB : RETURN (IfcDimensionalExponents
(0, 0, 1, 1, 0, 0, 0));
VOLT : RETURN (IfcDimensionalExponents
(2, 1, -3, -1, 0, 0, 0));
FARAD : RETURN (IfcDimensionalExponents
(-2, -1, 4, 1, 0, 0, 0));
OHM : RETURN (IfcDimensionalExponents
(2, 1, -3, -2, 0, 0, 0));
SIEMENS : RETURN (IfcDimensionalExponents
(-2, -1, 3, 2, 0, 0, 0));
WEBER : RETURN (IfcDimensionalExponents
(2, 1, -2, -1, 0, 0, 0));
TESLA : RETURN (IfcDimensionalExponents
(0, 1, -2, -1, 0, 0, 0));
HENRY : RETURN (IfcDimensionalExponents
(2, 1, -2, -2, 0, 0, 0));
DEGREE_CELSIUS : RETURN (IfcDimensionalExponents
(0, 0, 0, 0, 1, 0, 0));
LUMEN : RETURN (IfcDimensionalExponents
(0, 0, 0, 0, 0, 0, 1));
LUX : RETURN (IfcDimensionalExponents
(-2, 0, 0, 0, 0, 0, 1));
BECQUEREL : RETURN (IfcDimensionalExponents
(0, 0, -1, 0, 0, 0, 0));
GRAY : RETURN (IfcDimensionalExponents
(2, 0, -2, 0, 0, 0, 0));
SIEVERT : RETURN (IfcDimensionalExponents
(2, 0, -2, 0, 0, 0, 0));
OTHERWISE : RETURN (IfcDimensionalExponents  
(0, 0, 0, 0, 0, 0, 0));
END_CASE;
END_FUNCTION;

FUNCTION IfcDotProduct
(Arg1, Arg2 : IfcDirection)
: REAL;
LOCAL
Scalar : REAL;
Vec1, Vec2 : IfcDirection;
Ndim : INTEGER;
END_LOCAL;
IF NOT EXISTS (Arg1) OR NOT EXISTS (Arg2) THEN
Scalar := ?;
ELSE
IF (Arg1.Dim <> Arg2.Dim) THEN
Scalar := ?;
ELSE
BEGIN
Vec1 := IfcNormalise(Arg1);
Vec2 := IfcNormalise(Arg2);
Ndim := Arg1.Dim;
Scalar := 0.0;
REPEAT i := 1 TO Ndim;
Scalar := Scalar + Vec1.DirectionRatios[i]*Vec2.DirectionRatios[i];
END_REPEAT;
END;
END_IF;
END_IF;
RETURN (Scalar);
END_FUNCTION;

FUNCTION IfcFirstProjAxis
(ZAxis, Arg : IfcDirection)
: IfcDirection;
LOCAL
XAxis : IfcDirection;
V : IfcDirection;
Z : IfcDirection;
XVec : IfcVector;
END_LOCAL;
IF (NOT EXISTS(ZAxis)) THEN
RETURN (?) ;
ELSE
Z := IfcNormalise(ZAxis);
IF NOT EXISTS(Arg) THEN
IF (Z.DirectionRatios <> [1.0,0.0,0.0]) THEN
V := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([1.0,0.0,0.0]);
ELSE
V := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0,1.0,0.0]);
END_IF;
ELSE
IF (Arg.Dim <> 3) THEN
RETURN (?) ;
END_IF;
IF ((IfcCrossProduct(Arg,Z).Magnitude) = 0.0) THEN
RETURN (?);
ELSE
V := IfcNormalise(Arg);
END_IF;
END_IF;
XVec := IfcScalarTimesVector(IfcDotProduct(V, Z), Z);
XAxis := IfcVectorDifference(V, XVec).Orientation;
XAxis := IfcNormalise(XAxis);
END_IF;
RETURN(XAxis);
END_FUNCTION;

FUNCTION IfcMlsTotalThickness  
(LayerSet : IfcMaterialLayerSet)
: IfcLengthMeasure;
LOCAL
Max : IfcLengthMeasure := LayerSet.MaterialLayers[1].LayerThickness;
END_LOCAL;
IF SIZEOF(LayerSet.MaterialLayers) > 1 THEN
REPEAT i := 2 TO HIINDEX(LayerSet.MaterialLayers);
Max := Max + LayerSet.MaterialLayers[i].LayerThickness;
END_REPEAT;
END_IF;
RETURN (Max);
END_FUNCTION;

FUNCTION IfcNormalise
(Arg : IfcVectorOrDirection)
: IfcVectorOrDirection;
LOCAL
Ndim : INTEGER;
V : IfcDirection
:= IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([1.,0.]);
Vec : IfcVector
:= IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector (
IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([1.,0.]), 1.);
Mag : REAL;
Result : IfcVectorOrDirection
:= V;
END_LOCAL;
IF NOT EXISTS (Arg) THEN
RETURN (?);
ELSE
Ndim := Arg.Dim;
IF 'IFC2X3_CV_V2_0.IFCVECTOR' IN TYPEOF(Arg) THEN
BEGIN
V.DirectionRatios := Arg\IfcVector.Orientation.DirectionRatios;
Vec.Magnitude := Arg\IfcVector.Magnitude;
Vec.Orientation := V;
IF Arg.Magnitude = 0.0 THEN
RETURN(?);
ELSE
Vec.Magnitude := 1.0;
END_IF;
END;
ELSE
V.DirectionRatios := Arg.DirectionRatios;
END_IF;
Mag := 0.0;
REPEAT i := 1 TO Ndim;
Mag := Mag + V.DirectionRatios[i]*V.DirectionRatios[i];
END_REPEAT;
IF Mag > 0.0 THEN
Mag := SQRT(Mag);
REPEAT i := 1 TO Ndim;
V.DirectionRatios[i] := V.DirectionRatios[i]/Mag;
END_REPEAT;
IF 'IFC2X3_CV_V2_0.IFCVECTOR' IN TYPEOF(arg) THEN
Vec.Orientation := V;
Result := Vec;
ELSE
Result := V;
END_IF;
ELSE
RETURN(?);
END_IF;
END_IF;
RETURN (Result);
END_FUNCTION;

FUNCTION IfcOrthogonalComplement
(Vec : IfcDirection)  
: IfcDirection;
LOCAL
Result : IfcDirection ;
END_LOCAL;
IF NOT EXISTS (Vec) OR (Vec.Dim <> 2) THEN
RETURN(?);
ELSE
Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([-Vec.DirectionRatios[2], Vec.DirectionRatios[1]]);
RETURN(Result);
END_IF;
END_FUNCTION;

FUNCTION IfcScalarTimesVector
(Scalar : REAL; Vec : IfcVectorOrDirection)
: IfcVector;
LOCAL
V : IfcDirection;
Mag : REAL;
Result : IfcVector;
END_LOCAL;
IF NOT EXISTS (Scalar) OR NOT EXISTS (Vec) THEN
RETURN (?) ;
ELSE
IF 'IFC2X3_CV_V2_0.IFCVECTOR' IN TYPEOF (Vec) THEN
V := Vec\IfcVector.Orientation;
Mag := Scalar * Vec\IfcVector.Magnitude;
ELSE
V := Vec;
Mag := Scalar;
END_IF;
IF (Mag < 0.0 ) THEN
REPEAT i := 1 TO SIZEOF(V.DirectionRatios);
V.DirectionRatios[i] := -V.DirectionRatios[i];
END_REPEAT;
Mag := -Mag;
END_IF;
Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(IfcNormalise(V), Mag);
END_IF;
RETURN (Result);
END_FUNCTION;

FUNCTION IfcSecondProjAxis
(ZAxis, XAxis, Arg: IfcDirection)
: IfcDirection;
LOCAL
YAxis : IfcVector;
V : IfcDirection;
Temp : IfcVector;
END_LOCAL;
IF NOT EXISTS(Arg) THEN
V := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0,1.0,0.0]);
ELSE
V := Arg;
END_IF;
Temp := IfcScalarTimesVector(IfcDotProduct(V, ZAxis), ZAxis);
YAxis := IfcVectorDifference(V, Temp);
Temp := IfcScalarTimesVector(IfcDotProduct(V, XAxis), XAxis);
YAxis := IfcVectorDifference(YAxis, Temp);
YAxis := IfcNormalise(YAxis);
RETURN(YAxis.Orientation);
END_FUNCTION;

FUNCTION IfcShapeRepresentationTypes
(RepType : IfcLabel; Items : SET OF IfcRepresentationItem)
: LOGICAL;
LOCAL
Count : INTEGER := 0;  
END_LOCAL;
CASE RepType OF
'Curve2D' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCCURVE' IN TYPEOF(temp))
AND (temp.Dim = 2)));
END;
'Annotation2D' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | (
SIZEOF(TYPEOF(temp) * [
'IFC2X3_CV_V2_0.IFCPOINT',
'IFC2X3_CV_V2_0.IFCCURVE',
'IFC2X3_CV_V2_0.IFCGEOMETRICCURVESET',
'IFC2X3_CV_V2_0.IFCANNOTATIONFILLAREA',
'IFC2X3_CV_V2_0.IFCDEFINEDSYMBOL',
'IFC2X3_CV_V2_0.IFCTEXTLITERAL',
'IFC2X3_CV_V2_0.IFCDRAUGHTINGCALLOUT']) = 1)
));
END;
'GeometricSet' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCGEOMETRICSET' IN TYPEOF(temp))
OR ('IFC2X3_CV_V2_0.IFCPOINT' IN TYPEOF(temp))
OR ('IFC2X3_CV_V2_0.IFCCURVE' IN TYPEOF(temp))
OR ('IFC2X3_CV_V2_0.IFCSURFACE' IN TYPEOF(temp))));
END;
'GeometricCurveSet' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCGEOMETRICCURVESET' IN TYPEOF(temp))
OR ('IFC2X3_CV_V2_0.IFCGEOMETRICSET' IN TYPEOF(temp))
OR ('IFC2X3_CV_V2_0.IFCPOINT' IN TYPEOF(temp))
OR ('IFC2X3_CV_V2_0.IFCCURVE' IN TYPEOF(temp))));
REPEAT i:=1 TO HIINDEX(Items);
IF ('IFC2X3_CV_V2_0.IFCGEOMETRICSET' IN TYPEOF(Items[i]))
THEN
IF (SIZEOF(QUERY(temp <* Items[i]\IfcGeometricSet.Elements | 'IFC2X3_CV_V2_0.IFCSURFACE' IN TYPEOF(temp))) > 0)
THEN
Count := Count - 1;
END_IF;
END_IF;
END_REPEAT;
END;
'SurfaceModel' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | SIZEOF([
'IFC2X3_CV_V2_0.IFCSHELLBASEDSURFACEMODEL',
'IFC2X3_CV_V2_0.IFCFACEBASEDSURFACEMODEL',
'IFC2X3_CV_V2_0.IFCFACETEDBREP',
'IFC2X3_CV_V2_0.IFCFACETEDBREPWITHVOIDS'] * TYPEOF(temp)) >= 1
));
END;
'SolidModel' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCSOLIDMODEL' IN TYPEOF(temp))));
END;
'SweptSolid' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCSWEPTAREASOLID' IN TYPEOF(temp))));
END;
'CSG' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCBOOLEANRESULT' IN TYPEOF(temp))));
END;
'Clipping' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCBOOLEANCLIPPINGRESULT' IN TYPEOF(temp))));
END;
'AdvancedSweptSolid' :  
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCSURFACECURVESWEPTAREASOLID' IN TYPEOF(temp))
OR ('IFC2X3_CV_V2_0.IFCSWEPTDISKSOLID' IN TYPEOF(temp))));
END;
'Brep' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCFACETEDBREP' IN TYPEOF(temp))
OR ('IFC2X3_CV_V2_0.IFCFACETEDBREPWITHVOIDS' IN TYPEOF(temp))));
END;
'BoundingBox' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCBOUNDINGBOX' IN TYPEOF(temp))));
IF (SIZEOF(Items) > 1)
THEN
Count := 0;
END_IF;
END;
'SectionedSpine' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCSECTIONEDSPINE' IN TYPEOF(temp))));
END;
'MappedRepresentation' :
BEGIN
Count := SIZEOF(QUERY(temp <* Items | ('IFC2X3_CV_V2_0.IFCMAPPEDITEM' IN TYPEOF(temp))));
END;
OTHERWISE : RETURN(?);
END_CASE;
RETURN (Count = SIZEOF(Items));
END_FUNCTION;

FUNCTION IfcUniquePropertyName
(Properties : SET [1:?] OF IfcProperty)
: LOGICAL;
LOCAL
Names : SET OF IfcIdentifier := [];
END_LOCAL;
REPEAT i:=1 TO HIINDEX(Properties);
Names := Names + Properties[i].Name;
END_REPEAT;
RETURN (SIZEOF(Names) = SIZEOF(Properties));
END_FUNCTION;

FUNCTION IfcVectorDifference
(Arg1, Arg2 : IfcVectorOrDirection)
: IfcVector;
LOCAL
Result : IfcVector;
Res, Vec1, Vec2 : IfcDirection;
Mag, Mag1, Mag2 : REAL;
Ndim : INTEGER;
END_LOCAL;
IF ((NOT EXISTS (Arg1)) OR (NOT EXISTS (Arg2))) OR (Arg1.Dim <> Arg2.Dim) THEN
RETURN (?) ;
ELSE
BEGIN
IF 'IFC2X3_CV_V2_0.IFCVECTOR' IN TYPEOF(Arg1) THEN
Mag1 := Arg1\IfcVector.Magnitude;
Vec1 := Arg1\IfcVector.Orientation;
ELSE
Mag1 := 1.0;
Vec1 := Arg1;
END_IF;
IF 'IFC2X3_CV_V2_0.IFCVECTOR' IN TYPEOF(Arg2) THEN
Mag2 := Arg2\IfcVector.Magnitude;
Vec2 := Arg2\IfcVector.Orientation;
ELSE
Mag2 := 1.0;
Vec2 := Arg2;  
END_IF;
Vec1 := IfcNormalise (Vec1);
Vec2 := IfcNormalise (Vec2);
Ndim := SIZEOF(Vec1.DirectionRatios);
Mag := 0.0;
Res := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcDirection([0.0:Ndim]);
REPEAT i := 1 TO Ndim;
Res.DirectionRatios[i] := Mag1*Vec1.DirectionRatios[i] - Mag2*Vec2.DirectionRatios[i];
Mag := Mag + (Res.DirectionRatios[i]*Res.DirectionRatios[i]);
END_REPEAT;
IF (Mag > 0.0 ) THEN
Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector( Res, SQRT(Mag));
ELSE
Result := IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector( Vec1, 0.0);
END_IF;
END;
END_IF;
RETURN (Result);
END_FUNCTION;

END_SCHEMA;